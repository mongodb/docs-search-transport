{
    "includeInGlobalSearch": true,
    "aliases": ["bi-connector-alias"],
    "documents": [
        {
            "slug": "index.html",
            "title": "MongoDB Connector for BI \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "MongoDB Connector for BI",
                "About the MongoDB Connector for BI",
                "New in Version 2.2",
                "Authentication Plugins",
                "New in Version 2.0",
                "Improved Server-Side Execution",
                "Pass-through Authentication",
                "Simplified Architecture",
                "SQL Compatibility"
            ],
            "text": "\nMongoDB Connector for BI\u00b6\n\nOn this page\n\nAbout the MongoDB Connector for BI\nNew in Version 2.2\nNew in Version 2.0\n\n\n\nAbout the MongoDB Connector for BI\u00b6\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nThe MongoDB Connector for Business Intelligence (BI) allows users to\nvisualize their MongoDB Enterprise data using existing relational\nbusiness intelligence tools such as\nTableau,\nMicroStrategy, and\nQlik. These tools expect to connect to a data\nsource and find data in tabular form following a fixed schema. This\npresents a challenge when working with MongoDB\u2019s\nflexible schema and rich,\nmulti-dimensional documents.\nThe MongoDB Connector for BI acts as a layer that passes queries and\ndata between a mongod or mongos instance and your\nreporting tool. The MongoDB Connector for BI stores no data, and purely serves to bridge your\nMongoDB server with business intelligence tools.\n\n\n\n\nNew in Version 2.2\u00b6\n\nAuthentication Plugins\u00b6\nMongoDB Connector for BI Version 2.0 introduced passthrough authentication,\nin which clients authenticate as a user defined in MongoDB, without\nthe need to create a separate user within the connector itself.\nMongoDB Connector for BI Version 2.2 further increases ease of use with\na set of authentication plugins which can authenticate users\nthrough the connector without the need for SSL certificates.\nThese plugins perform user authentication via the SASL framework\nand support the SCRAM-SHA-1 and PLAIN authentication mechanisms.\nWe currently provide authentication plugins in the following languages:\n\nJava - for use with\nMySQL\u2019s Connector/J driver\nC - for use with the MySQL ODBC\ndriver and the MySQL Shell\n\n\n\n\nNew in Version 2.0\u00b6\n\nImproved Server-Side Execution\u00b6\nThe MongoDB Connector for BI delivers significant performance and scalability improvements\nby moving as much execution as possible to the underlying MongoDB\ninstance. Pushing execution down to the server reduces network\nlatency and reduces bandwidth consumption.\nThis approach also reduces memory and CPU consumption in the MongoDB Connector for BI itself.\n\n\nPass-through Authentication\u00b6\nThe user authentication process is now passed through the MongoDB Connector for BI to the\nunderlying MongoDB instance. Users now authenticate as a user already\ncreated within MongoDB.\n\n\nSimplified Architecture\u00b6\nThe MongoDB Connector for BI package is now trimmed down from four separate components to\ntwo:\n\nmongodrdl\nThis tool connects to a MongoDB instance and\ngenerates a Document-Relational Definition Language (DRDL)\nfile, which maps a given collection shape to relational schema.\nmongosqld\nOnce installed and run as a daemon,\nmongosqld responds to SQL queries, requests for DB\ninformation, and schema from the requesting BI tool via the MySQL\nwire protocol.\nmongosqld requires at least one Document Relational Definition Language file to start.\nYou will need to have defined your schema with\nmongodrdl before starting mongosqld.\n\n\n\n\nSQL Compatibility\u00b6\nMongoDB Connector for BI Version 2.x is compatible with SQL-99 SELECT statements, and uses\nthe MySQL wire protocol.\n\nSee also\nSupported SQL Functions and Operators\n\n\n\nInstallation\nInstall the C Authentication Plugin\nInstall the JDBC Authentication Plugin\n\n\nSchema Configuration\nUsing the MongoDB Connector for BI\nConnect from the MySQL Client\nConnect from Tableau Desktop\n\n\nComponents\nmongodrdl\nmongosqld\nC Authentication Plugin\nJDBC Authentication Plugin\n\n\nFAQ\nRelease Notes\nSupported SQL Functions and Operators\n\n\n\n\n",
            "preview": "The MongoDB Connector for Business Intelligence (BI) allows users to visualize their MongoDB Enterprise data using existing relational business intelligence tools such as Tableau, MicroStrategy, and Qlik. These tools expect to connect to a data source and find data in tabular form following a fixed schema. This presents a challenge when working with MongoDB\u2019s flexible schema and rich, multi-dimensional documents.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/components/",
                "https://docs.mongodb.com/bi-connector/current/installation/",
                "https://www.microstrategy.com/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-c/",
                "https://www.tableau.com/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://docs.mongodb.com/bi-connector/current/connect/tableau/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/using-the-bi/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "http://docs.mongodb.com/manual/data-modeling",
                "https://docs.mongodb.com/bi-connector/current/connect/mysql/",
                "http://www.qlik.com/",
                "https://docs.mongodb.com/bi-connector/current/schema-configuration/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-jdbc/",
                "https://docs.mongodb.com/bi-connector/current/release-notes/",
                "https://docs.mongodb.com/bi-connector/current/reference/auth-plugin-c/",
                "https://docs.mongodb.com/bi-connector/current/faq/",
                "https://docs.mongodb.com/bi-connector/current/supported-operations/"
            ]
        },
        {
            "slug": "components/index.html",
            "title": "MongoDB Connector for BI Components \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "MongoDB Connector for BI Components"
            ],
            "text": "\nMongoDB Connector for BI Components\u00b6\n\nChanged in version 2.0: Version 2.0 of the MongoDB Connector for BI introduces a new architecture that replaces\nthe previous PostgreSQL foreign data wrapper with the new\nmongosqld.\nAs a result, the MongoDB Connector for BI no longer requires mongobiuser and\nmongobischema.\nIf you are using an older release of the MongoDB Connector for BI, you should upgrade to 2.0\nby following the steps in Installation.\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nThe following tools are available for use with the MongoDB Connector for BI:\n\nmongodrdl generates database schema information for use\nwith the MongoDB Connector for BI.\nmongosqld proxies incoming queries between a MySQL client\nand a MongoDB server.\nThe C Authentication Plugin and\nJDBC Authentication Plugin\nfacilitate secure transmission of authentication credentials between\nmongosqld and a MySQL client.\n\n\n\nmongodrdl\nmongosqld\nC Authentication Plugin\nJDBC Authentication Plugin\n\n\n",
            "preview": "Changed in version 2.0: Version 2.0 of the MongoDB Connector for BI introduces a new architecture that replaces the previous PostgreSQL foreign data wrapper with the new mongosqld.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/installation/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-c/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-jdbc/",
                "https://docs.mongodb.com/bi-connector/current/reference/auth-plugin-c/"
            ]
        },
        {
            "slug": "connect/mysql/index.html",
            "title": "Connect from the MySQL Client \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Connect from the MySQL Client",
                "Authentication",
                "Connect from MySQL without Authentication or TLS/SSL",
                "Connect from MySQL with Authentication",
                "Connect from MySQL with Authentication and TLS/SSL"
            ],
            "text": "\nConnect from the MySQL Client\u00b6\n\nOn this page\n\nAuthentication\nConnect from MySQL without Authentication or TLS/SSL\nConnect from MySQL with Authentication\nConnect from MySQL with Authentication and TLS/SSL\n\n\n\nAuthentication\u00b6\n\nNew in version 2.2: The MongoDB Connector for BI now offers MySQL authentication plugins allowing you to\nconnect with authentication but without TLS/SSL.\n\nThere are two options for authenticating your connection:\n\nUse an authentication plugin with either the SCRAM-SHA-1 or\nPLAIN authentication mechanism.\n\nImportant\nThe use of TLS/SSL is recommended as:\n\nThe SCRAM-SHA-1 mechanism hashes the passwords in the\nclient plugin. However, all other data is in cleartext.\nThe PLAIN mechanism sends the password in cleartext.\n\nSee C Authentication Plugin or Install the JDBC\nAuthentication Plugin for more information\non the plugins.\n\n\nProvide cleartext credentials for simple username/password\nauthentication against a MongoDB database. This method uses\nMySQL\u2019s built-in mysql_clear_password plugin.\n\nNote\nAuthentication with mysql_clear_password requires the use of\nTLS/SSL. See Connect from MySQL with Authentication and\nTLS/SSL for more information.\n\n\n\nThe MongoDB Connector for BI requires authentication when running with --auth.\nWhen the MongoDB Connector for BI receives a connection with authentication credentials\nfrom a client, it passes those credentials through to the underlying\nMongoDB instance.\nYou can specify the following authentication options after your\nusername as URI-style query parameters:\n\n\n\n\n\n\nConnection Option\nDescription\n\n\n\n\n\nsource\u00b6\n\n\n\nSpecify the name of the database which stores the user\u2019s\ncredentials. If you do not specify this option, the MongoDB Connector for BI will\ndefault to the current database associated with the MySQL\nconnection.\nFor authentication mechanisms such as PLAIN (LDAP) that\ndelegate credential storage to other services, set the\nsource value to $external.\n\n\n\n\nmechanism\u00b6\n\n\n\nSpecify the mechanism that the MongoDB Connector for BI should use to\nauthenticate the connection. Accepted values include:\n\nSCRAM-SHA-1\nPLAIN (LDAP SASL)\n\nThe PLAIN (LDAP) mechanism requires MongoDB Enterprise, and\nrequires that source be $external.\n\nNote\nNeither Kerberos (GSSAPI) nor x.509 are supported.\n\n\n\n\n\n\nExample\nTo authenticate as the user grace with authentication\nmechanism PLAIN and using an external source, you would use the\nfollowing username:\ngrace?mechanism=PLAIN&source=$external\n\n\n\nYou can use the command-line MySQL client to connect to the MongoDB Connector for BI.\n\n\nConnect from MySQL without Authentication or TLS/SSL\u00b6\nTo connect to a mongosqld instance listening on the MySQL\ndefault port 3307, run the following command:\nmysql --protocol tcp --port 3307\n\n\n\n\nConnect from MySQL with Authentication\u00b6\nInstall the authentication plugin as described on\nInstall the C Authentication Plugin.\nThe following example uses the C authentication plugin to\nconnect to a mongosqld instance listening on port\n3307 as user reportsUser. The MySQL shell prompts for the\npassword after the command has been entered.\nmysql '--user=reportsUser?source=admin' --default-auth=mongosql_auth -p\n\n\nThis example assumes that the authentication plugin file\nmongosql_auth.so is located in the default MySQL plugin folder.\nThe location of the plugin folder varies by platform, but you can\nlocate it by running the following command:\nmysql_config --plugindir\n\n\n\n\nConnect from MySQL with Authentication and TLS/SSL\u00b6\nTo connect to a mongosqld instance listening on port 3307,\nas user grace using authentication mechanism PLAIN, and using\nspecific TLS/SSL CA and x.509 certificates, run the following command:\nmysql --enable-cleartext-plugin --protocol tcp --port 3307 \\\n  -u 'grace?mechanism=PLAIN&source=$external' \\\n  --ssl-ca=/path_to_the_CAcert/ca.crt \\\n  --ssl-key=/path_to_my_certificate_key/mysql.key \\\n  --ssl-cert=/path_to_my_client_certificate/mysql.crt \\\n  -p\n\n\nIf using the $external authentication source, wrap your username in\nsingle quotes or escape the $ character with a backslash to prevent\nyour shell from performing interpolation.\nAuthentication requires your client to send your password in plain\ntext. To send the password in plain text, either:\n\nUse the --enable-cleartext-plugin option shown in the\nprevious example, or\nSet the environment variable LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1.\n\nSee the\nMySQL documentation\nfor additional details on enabling the MySQL cleartext plugin.\n\n",
            "preview": "New in version 2.2: The MongoDB Connector for BI now offers MySQL authentication plugins allowing you to connect with authentication but without TLS/SSL.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-c/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://docs.mongodb.com/bi-connector/current/connect/tableau/",
                "https://docs.mongodb.com/manual/core/authentication-mechanisms-enterprise/",
                "https://dev.mysql.com/doc/refman/5.7/en/cleartext-authentication-plugin.html",
                "https://docs.mongodb.com/manual/core/security-scram-sha-1/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-jdbc/",
                "https://docs.mongodb.com/bi-connector/current/reference/auth-plugin-c/"
            ]
        },
        {
            "slug": "connect/tableau/index.html",
            "title": "Connect from Tableau Desktop \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Connect from Tableau Desktop",
                "Authentication",
                "Connect from Tableau with the C Authentication Plugin",
                "Download the C Authentication Plugin library.",
                "Create a MySQL Configuration file. (macOS only)",
                "Create a Tableau Datasource Connection file.",
                "Start Tableau.",
                "Connect using Tableau.",
                "Connect from Tableau without Authentication or TLS/SSL",
                "Connect from Tableau with Authentication and TLS/SSL",
                "Using a TDC File",
                "Create a Tableau Datasource Connection file.",
                "Connect using Tableau.",
                "Using an Environment Variable",
                "Start Tableau.",
                "Connect using Tableau."
            ],
            "text": "\nConnect from Tableau Desktop\u00b6\n\nOn this page\n\nAuthentication\nConnect from Tableau with the C Authentication Plugin\nConnect from Tableau without Authentication or TLS/SSL\nConnect from Tableau with Authentication and TLS/SSL\n\n\nThe MongoDB Connector for BI\nis a named connector in Tableau.\n\nAuthentication\u00b6\n\nNew in version 2.2: The MongoDB Connector for BI now offers MySQL authentication plugins allowing you to\nconnect with authentication but without TLS/SSL.\n\nThere are two options for authenticating your connection:\n\nUse an authentication plugin with either the SCRAM-SHA-1 or\nPLAIN authentication mechanism.\n\nImportant\nThe use of TLS/SSL is recommended as:\n\nThe SCRAM-SHA-1 mechanism hashes the passwords in the\nclient plugin. However, all other data is in cleartext.\nThe PLAIN mechanism sends the password in cleartext.\n\nSee C Authentication Plugin or Install the JDBC\nAuthentication Plugin for more information\non the plugins.\n\n\nProvide cleartext credentials for simple username/password\nauthentication against a MongoDB database. This method uses\nMySQL\u2019s built-in mysql_clear_password plugin.\n\nNote\nAuthentication with mysql_clear_password requires the use of\nTLS/SSL. See Connect from MySQL with Authentication and\nTLS/SSL for more information.\n\n\n\nThe MongoDB Connector for BI requires authentication when running with --auth.\nWhen the MongoDB Connector for BI receives a connection with authentication credentials\nfrom a client, it passes those credentials through to the underlying\nMongoDB instance.\nYou can specify the following authentication options after your\nusername as URI-style query parameters:\n\n\n\n\n\n\nConnection Option\nDescription\n\n\n\n\n\nsource\u00b6\n\n\n\nSpecify the name of the database which stores the user\u2019s\ncredentials. If you do not specify this option, the MongoDB Connector for BI will\ndefault to the current database associated with the MySQL\nconnection.\nFor authentication mechanisms such as PLAIN (LDAP) that\ndelegate credential storage to other services, set the\nsource value to $external.\n\n\n\n\nmechanism\u00b6\n\n\n\nSpecify the mechanism that the MongoDB Connector for BI should use to\nauthenticate the connection. Accepted values include:\n\nSCRAM-SHA-1\nPLAIN (LDAP SASL)\n\nThe PLAIN (LDAP) mechanism requires MongoDB Enterprise, and\nrequires that source be $external.\n\nNote\nNeither Kerberos (GSSAPI) nor x.509 are supported.\n\n\n\n\n\n\nExample\nTo authenticate as the user grace with authentication\nmechanism PLAIN and using an external source, you would use the\nfollowing username:\ngrace?mechanism=PLAIN&source=$external\n\n\n\n\nNew in version 2.2.\n\n\n\nConnect from Tableau with the C Authentication Plugin\u00b6\n1\nDownload the C Authentication Plugin library.\u00b6\nNavigate to the releases page\nthen download the mongosql_auth plugin library.\n\n\n\n\n\n\nmacOS\nSave the library file mongosql_auth.so to the\n/usr/local/mysql/lib/plugin/ directory.\nIf this directory does not exist, create it:\n\nExample\nsudo mkdir -p /usr/local/mysql/lib/plugin -m 755\nsudo chown -R {user}:admin /usr/local/mysql\ntar -xvf /Users/{user}/Downloads/mongosql-auth-osx-x86_64-v{version}.tgz\ncp /Users/{user}/Downloads/mongosql-auth-osx-x86_64/lib/mongosql_auth.so ./\n\n\n\nNote\nThis example assumes you downloaded the\nmongosql_auth plugin to the\n/Users/{user}/Downloads/ directory.\nThe plugin does not require MySQL or the MySQL ODBC\nConnector to be installed.\n\n\n\n\nWindows\nRun the Windows installer (.msi).\n\n\n\n\n2\nCreate a MySQL Configuration file. (macOS only)\u00b6\n\nCreate a text file with the following contents:\n[client]\ndefault-auth=mongosql_auth\n\n\n\nSave the file to /etc/my.cnf.\n\n\n\n3\nCreate a Tableau Datasource Connection file.\u00b6\n\nCreate a text file with the following contents:\n\n\n\n\n\n\nPlatform\nTDC File Contents\n\n\n\nmacOS\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10<?xml version='1.0' encoding='utf-8' ?>\n<connection-customization class='mongodb' version='7.7' enabled='true'>\n  <vendor name='mongodb' />\n  <driver name='mongodb' />\n  <customizations>\n    <customization\n      name='odbc-connect-string-extras'\n      value='USE_MYCNF=1' />\n  </customizations>\n</connection-customization>\n\n\n\n\nWindows\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10<?xml version='1.0' encoding='utf-8' ?>\n<connection-customization class='mongodb' version='7.7' enabled='true'>\n  <vendor name='mongodb' />\n  <driver name='mongodb' />\n  <customizations>\n    <customization\n      name='odbc-connect-string-extras'\n      value='DEFAULT_AUTH=mongosql_auth' />\n  </customizations>\n</connection-customization>\n\n\n\n\n\n\n\nSave this file as mongodb.tdc in the My Tableau\nRepository for your platform:\n\n\n\n\n\n\nPlatform\nDefault TDC Save Path\n\n\n\nmacOS\n/Users/{name}/Documents/My Tableau Repository/Datasources\n\nWindows\nC:\\Users\\{username}\\Documents\\My Tableau Repository\\Datasources\n\n\n\n\n\n\n4\nStart Tableau.\u00b6\nStart the Tableau Desktop application or restart it if it was\nalready running.\n\nImportant\nAny time you change a .tdc file, you must restart the Tableau\nDesktop application for those changes to take effect.\n\n\n5\nConnect using Tableau.\u00b6\n\nIn the left-side navigation under To a server, click\non More... then click MongoDB BI\nConnector.\n\nIn the connection dialog box:\n\n\n\n\n\n\nField\nAction\n\n\n\nServer\nType the hostname or IP address of the MongoDB Connector for BI host.\n\nPort\nType the\nIANA\nport number\nfor the MongoDB Connector for BI. The default is 3307.\n\nUsername\nType the username for the user that can access the active\nMongoDB Connector for BI database.\nUnless you specified a defaultMechanism in your\nMongoDB Connector for BI Configuration File, you\nmust append the authenticating database to the username.\n\nExample\nThe user myTestUser is authenticated against the\ntest database.\n\n\n\n\n\nIf you are using Username and Password (SCRAM-SHA-1)\nauthentication, the expected authenticating database is\nadmin.\nIf you are using LDAP (PLAIN) authentication, the\nexpected authenticating database is $external.\n\n\n\nPassword\nType the password associated with the Username.\n\n\n\n\nClick Sign In.\n\n\n\n\n\nConnect from Tableau without Authentication or TLS/SSL\u00b6\nClick on the MongoDB BI Connector named\nconnection in Tableau\u2019s left hand\ncolumn. Enter the host and port on which mongosqld is\nlistening, and click Sign In to connect.\nBy default, mongosqld binds to port 3307.\n\n\n\n\n\nConnect from Tableau with Authentication and TLS/SSL\u00b6\nTo connect Tableau to the MongoDB Connector for BI using TLS/SSL, you must configure\nTableau to send passwords in clear text either by using\na Tableau Datasource Connection (TDC) file, or by setting the\nLIBMYSQL_ENABLE_CLEARTEXT_PLUGIN environment variable.\n\nUsing a TDC File\u00b6\n\n1\nCreate a Tableau Datasource Connection file.\u00b6\nThe TDC file is a convenient way to enable the cleartext plugin\nand specify all of mongosqld\u2018s TLS/SSL certificates\nand keys.\nTo create a TDC file that can connect to the MongoDB Connector for BI with\nauthentication over TLS/SSL, modify the following .tdc file\ntemplate. Substitute SSLKEY, SSLCERT, and SSLCA\nappropriately:\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14<?xml version='1.0' encoding='utf-8' ?>\n<connection-customization class='mongodb' version='7.7' enabled='true'>\n  <vendor name='mongodb' />\n  <driver name='mongodb' />\n  <customizations>\n    <customization\n      name='odbc-connect-string-extras'\n      value='SSLKEY={C:\\path_to_key\\mongodb.key};\n             SSLCERT={C:\\path_to_cert\\mongodb.crt};\n             SSLCA={C:\\path_to_CAcert\\ca.crt};\n             ENABLE_CLEARTEXT_PLUGIN=1;\n             SSL_ENFORCE=1' />\n  </customizations>\n</connection-customization>\n\n\nSave this file as mongodb.tdc in the My Tableau\nRepository for your platform:\n\n\n\n\n\n\nPlatform\nDefault TDC Save Path\n\n\n\nmacOS\n/Users/{name}/Documents/My Tableau Repository/Datasources\n\nWindows\nC:\\Users\\{username}\\Documents\\My Tableau Repository\\Datasources\n\n\n\n\nImportant\nAny time you change a .tdc file, you must restart the Tableau\nDesktop application for those changes to take effect.\n\nTableau applies the TLS/SSL, certificate, and cleartext plugin\nsettings in the .tdc file to every connection matching\nthe named database vendor and driver.\n\n2\nConnect using Tableau.\u00b6\n\nIn the left-side navigation under To a server, click\non More... then click MongoDB BI\nConnector.\n\nIn the connection dialog box:\n\n\n\n\n\n\nField\nAction\n\n\n\nServer\nType the hostname or IP address of the MongoDB Connector for BI host.\n\nPort\nType the\nIANA\nport number\nfor the MongoDB Connector for BI. The default is 3307.\n\nUsername\nType the username for the user that can access the active\nMongoDB Connector for BI database.\nUnless you specified a defaultMechanism in your\nMongoDB Connector for BI Configuration File, you\nmust append the authenticating database to the username.\n\nExample\nThe user myTestUser is authenticated against the\ntest database.\n\n\n\n\n\nIf you are using Username and Password (SCRAM-SHA-1)\nauthentication, the expected authenticating database is\nadmin.\nIf you are using LDAP (PLAIN) authentication, the\nexpected authenticating database is $external.\n\n\n\nPassword\nType the password associated with the Username.\n\n\n\n\nClick Sign In.\n\n\n\n\nUsing an Environment Variable\u00b6\n\n1\nStart Tableau.\u00b6\n\nOS X\nOpen a terminal window and execute the following command:\nLIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1 /Applications/Tableau.app/Contents/MacOS/Tableau\n\n\n\nWindows\nAdd the LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1 environment variable\nto your user environment.\nTo do this, open a Command Prompt. Press the Win key,\ntype cmd.exe, and press Enter. Then execute the following\ncommand:\nSETX LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN 1\n\n\nSETX should respond with the following:\nSUCCESS: Specified value was saved.\n\n\nThen start Tableau.\n\n\n\n2\nConnect using Tableau.\u00b6\nClick on the MySQL named connection in Tableau\u2019s left\nhand column. Enter the host and port on which mongosqld is\nlistening, along with the username and password with which to\nauthenticate. Click Sign In to connect.\nBy default, mongosqld binds to port 3307.\n\n\n\n\n\n",
            "preview": "The MongoDB Connector for BI is a named connector in Tableau.",
            "links": [
                "https://dev.mysql.com/doc/refman/5.7/en/option-files.html",
                "https://www.tableau.com/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://docs.mongodb.com/manual/core/authentication-mechanisms-enterprise/",
                "http://kb.tableau.com/articles/howto/using-a-tdc-file-with-tableau-server",
                "https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml",
                "https://www.mongodb.com/download-center?jmp=tbl",
                "https://docs.mongodb.com/manual/core/security-scram-sha-1/",
                "https://github.com/mongodb/mongosql-auth-c/releases",
                "https://docs.mongodb.com/bi-connector/current/connect/mysql/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-jdbc/",
                "https://docs.mongodb.com/bi-connector/current/reference/auth-plugin-c/"
            ]
        },
        {
            "slug": "faq/index.html",
            "title": "FAQ: The MongoDB Connector for BI \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "FAQ: The MongoDB Connector for BI",
                "How do I authenticate with the MongoDB Connector for BI?",
                "Does the MongoDB Connector for BI store any data?",
                "How are queries processed?",
                "How do I skip data incompatible with my DRDL type definition?",
                "Using MongoDB 3.4 Views",
                "Using a DRDL Filter",
                "Is there any syntax validation tool for DRDL?",
                "How does the MongoDB Connector for BI process dates?",
                "How do I use TLS/SSL with the MongoDB Connector for BI?",
                "Connecting mongosqld to MongoDB",
                "Connecting a client to mongosqld"
            ],
            "text": "\nFAQ: The MongoDB Connector for BI\u00b6\n\nOn this page\n\nHow do I authenticate with the MongoDB Connector for BI?\nDoes the MongoDB Connector for BI store any data?\nHow are queries processed?\nHow do I skip data incompatible with my DRDL type definition?\nIs there any syntax validation tool for DRDL?\nHow does the MongoDB Connector for BI process dates?\nHow do I use TLS/SSL with the MongoDB Connector for BI?\n\n\n\nHow do I authenticate with the MongoDB Connector for BI?\u00b6\n\nChanged in version 2.0: Prior to version 2.0, the MongoDB Connector for BI stored its own separate set of\ncredentials.\nIf you are using an older release of the MongoDB Connector for BI, you should upgrade to 2.0\nby following the steps in Installation.\n\nWhen connecting to a MongoDB deployment using\nauthentication, you can\nauthenticate as the users and roles configured in that deployment.\nSee Authentication for details on how to specify\nyour authentication source and mechanism.\n\n\nDoes the MongoDB Connector for BI store any data?\u00b6\nThe MongoDB Connector for BI instance only transforms SQL queries into\nMongoDB queries. It does not store any data itself.\nWhen starting mongosqld, you provide it a\nDRDL file describing the schema of your\ndata.\n\n\nHow are queries processed?\u00b6\nThe MongoDB Connector for BI constructs an aggregation\npipeline that allows the MongoDB server to execute many SQL\nexpressions.\nmongosqld always enables the\naggregate allowDiskUse\noption.\nThe MongoDB Connector for BI cannot map some supported SQL constructs into an\naggregation equivalent. In this case, the MongoDB Connector for BI will execute those\nconstructs in memory.\n\n\nHow do I skip data incompatible with my DRDL type definition?\u00b6\n\nUsing MongoDB 3.4 Views\u00b6\nMongoDB 3.4 introduces Read-Only Views that you can\nuse to filter incompatible data.\nFor example, you can create a view in the test database that contains\nonly documents containing a number in the grade field of a grades\ncollection:\ndb.runCommand( { create: \"numericGrades\", viewOn: \"grades\", pipeline: [ { \"$match\": { \"grade\": { \"$type\": \"number\" } } } ] } )\n\n\nYou can then use mongodrdl to generate a schema from this view\nas you would a collection:\nmongodrdl -d test -c numericGrades\n\n\n\n\nUsing a DRDL Filter\u00b6\nIf documents in a collection contain different data types for a field,\nyou may filter for a specific data type. To accomplish this, you can\ninclude a $match stage at the beginning of the pipeline in\nyour DRDL table definition.\nFor example, to match only documents containing a number in the grade field,\nuse the following pipeline stage:\n\"$match\": { \"grade\": { \"$type\": \"number\" } }\n\n\nIf you are unwinding an array field that contains\ndifferent data types, then to filter the array for a specific data type, put\nthe $match stage after the $unwind.\n\nSee also\nHeterogeneous data types\n\n\n\n\nIs there any syntax validation tool for DRDL?\u00b6\nDRDL files use the YAML syntax. Any\nYAML validator such as https://yaml-online-parser.appspot.com/ can help you\ncheck your DRDL files.\n\n\nHow does the MongoDB Connector for BI process dates?\u00b6\nThe MongoDB Connector for BI will correctly process BSON date data\nby mapping it to the SQL datetime type. For example:\ndb.data.save({ date: new Date() })\n\n\nIf you store date data as a string, the MongoDB Connector for BI treats it as a string\nrather than as a date. For example, MongoDB Connector for BI treats the following as a\nstring:\ndb.data.save({ date: '32-FEB-2015' })\n\n\n\n\nHow do I use TLS/SSL with the MongoDB Connector for BI?\u00b6\nThe connection between mongosqld and your MongoDB deployment\nhas TLS/SSL configured separately from the connection between your MySQL\nclient and mongosqld.\n\nConnecting mongosqld to MongoDB\u00b6\nIf the MongoDB instance you are connecting to uses\nTLS/SSL, provide\nthe --mongo-ssl option to mongosqld.\nFor example:\nmongosqld --schema=schema.drdl --mongo-ssl\n\n\nTo specify a TLS/SSL CA root certificate, use the --mongo-sslCAFile\noption. To specify a client certificate, use the --mongo-sslPEMKeyFile\noption. For example:\nmongosqld --schema=schema.drdl \\\n          --mongo-ssl \\\n          --mongo-sslCAFile=/certs/ca.pem \\\n          --mongo-sslPEMKeyFile=/certs/mongodb_client.pem\n\n\n\n\nConnecting a client to mongosqld\u00b6\nTo specify a TLS/SSL CA root certificate, use the --sslCAFile\noption. To specify a client certificate, use the --sslPEMKeyFile\noption. For example:\nmongosqld --schema=schema.drdl \\\n          --sslCAFile=/certs/ca.pem \\\n          --sslPEMKeyFile=/certs/mysql_client.pem\n\n\n\n\n",
            "preview": "Changed in version 2.0: Prior to version 2.0, the MongoDB Connector for BI stored its own separate set of credentials.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/installation/",
                "http://docs.mongodb.com/manual/core/views",
                "http://docs.mongodb.com/manual/core/security-transport-encryption",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "http://docs.mongodb.com/manual/tutorial/enable-authentication",
                "https://docs.mongodb.com/bi-connector/current/connect/tableau/",
                "http://yaml.org/",
                "https://yaml-online-parser.appspot.com/",
                "http://docs.mongodb.com/manual/reference/command/aggregate",
                "https://docs.mongodb.com/bi-connector/current/schema-configuration/",
                "https://docs.mongodb.com/manual/reference/bson-types/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "https://docs.mongodb.com/manual/reference/glossary/",
                "https://docs.mongodb.com/manual/aggregation/"
            ]
        },
        {
            "slug": "installation/index.html",
            "title": "Installation \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Installation",
                "Supported Platforms",
                "Prerequisites",
                "macOS",
                "RHEL-based Linux",
                "Debian-based Linux",
                "Windows",
                "Install the MongoDB Connector for BI",
                "Install the MongoDB Connector for BI.",
                "Generate your schema definition file.",
                "Edit your MongoDB Connector for BI configuration file.",
                "Start mongosqld as a system service.",
                "Connect to the MongoDB Connector for BI",
                "Change the Schema File"
            ],
            "text": "\nInstallation\u00b6\n\nOn this page\n\nSupported Platforms\nPrerequisites\nInstall the MongoDB Connector for BI\nChange the Schema File\n\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nTo set up MongoDB Connector for BI with a business intelligence tool such as Tableau,\nfollow the steps on this page.\n\nSupported Platforms\u00b6\nMongoDB Connector for BI supports PPC64LE systems running Red Hat Enterprise Linux 7.1+;\ns390x systems running Red Hat Enterprise Linux 7.2+; and the following\nx86_64 operating systems:\n\n\n\n\n\n\n\nRed Hat Enterprise Linux/CentOS\n6.2+\n7.0+\n\nDebian\n7.1+ \u201cWheezy\u201d\n8.1+ \u201cJessie\u201d\n\nUbuntu\n14.04 \u201cTrusty\u201d\n\u00a0\n\nSUSE Enterprise Linux\n11\n12\n\nOS X\n10.10\n\u00a0\n\nWindows\nWindows 7/Windows Server 2008 R2 and later\n\u00a0\n\n\n\n\n\nPrerequisites\u00b6\nInstall OpenSSL on your host.\n\nmacOS\u00b6\nInstall Homebrew and then install OpenSSL.\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"; brew update && brew install openssl\n\n\n\n\nRHEL-based Linux\u00b6\nEnsure that your system has its OpenSSL package installed.\nrpm -qa | grep -i openssl\n\n\nIf it is not, use your package manager to install it.\n\n\nDebian-based Linux\u00b6\nEnsure that your system has its OpenSSL package installed.\ndpkg -l | grep -i openssl\n\n\nIf it is not, use your package manager to install it.\n\n\nWindows\u00b6\nMongoDB Connector for BI for Windows bundles the OpenSSL libraries.\n\n\n\nInstall the MongoDB Connector for BI\u00b6\n1\nInstall the MongoDB Connector for BI.\u00b6\nDownload the MongoDB Connector for BI for your operating system from the\nMongoDB Download Center.\n\nRHEL-based Linux\u00b6\n\nUninstall the previous version, if you have installed it.\nsudo yum remove mongodb-bi*\n\n\n\nExtract the .tar archive you downloaded.\ntar -xvzf mongodb-bi-linux-{arch}-{platform}-{version}.tgz\n\n\n\nInstall the programs within the bin/ directory into a\ndirectory listed in your system PATH.\nsudo install -m755 bin/mongo* /usr/local/bin/\n\n\n\n\n\n\nDebian-based Linux\u00b6\n\nUninstall the previous version, if you have installed it.\nsudo apt-get remove mongodb-bi*\n\n\n\nExtract the .tar archive you downloaded.\ntar -xvzf mongodb-bi-linux-{arch}-{platform}-{version}.tgz\n\n\n\nInstall the programs within the bin/ directory into a\ndirectory listed in your system PATH.\nsudo install -m755 bin/mongo* /usr/local/bin/\n\n\n\n\n\n\nmacOS\u00b6\n\nExtract the .tar archive you downloaded.\ntar -xvzf mongodb-bi-osx-x86_64-{version}.tgz\n\n\n\nInstall the programs within the bin/ directory into a directory\nlisted in your system PATH. If a prior version exists, overwrite\nthe binaries.\nsudo install -m755 bin/mongo* /usr/local/bin/\n\n\n\n\n\n\nWindows\u00b6\n\nRun the .msi file you downloaded.\nFollow the wizard to install the files. The binaries install into a\nbin directory inside the installation directory.\n\n\n\n2\nGenerate your schema definition file.\u00b6\nProvide a MongoDB server hostname, replace dbname with the name of your\ndatabase, and optionally replace collname with the name of a collection.\nIf you do not specify a collection, mongodrdl will generate a\nschema from all collections in dbname.\n\nLinux / macOS\u00b6\nmongodrdl --host {your.mongohost.com} -d dbname [-c collname] -o schema.drdl\n\n\n\n\nWindows\u00b6\n\"C:\\Program Files\\MongoDB\\Connector for BI\\2.2\\bin\\mongodrdl.exe\" --host {your.mongohost.com} -d dbname [-c collname] -o schema.drdl\n\n\n\nNote\nThe --host option only accepts a hostname. You cannot\nprovide a MongoDB connection string.\n\nYou can examine the generated schema.drdl file, and remove any fields or\ntables that are not part of your intended schema.\n\n\n3\nEdit your MongoDB Connector for BI configuration file.\u00b6\nUsing your preferred text editor, create a MongoDB Connector for BI configuration file.\nTo review the configuration file options, see Configuration\nFile.\n\n4\nStart mongosqld as a system service.\u00b6\n\nNote\nThe above examples demonstrate using MongoDB Connector for BI with a\nMongoDB instance running without authentication enabled. To\nuse mongosqld with the --auth option, see\nInstall the C Authentication Plugin.\n\n\nLinux / macOS using a configuration file\u00b6\nmongosqld install --config {pathToConfigFile}/mongosqld.conf\nsudo service mongosql start\n\n\n\n\nWindows using a configuration file\u00b6\n\"C:\\Program Files\\MongoDB\\Connector for BI\\2.2\\bin\\mongosqld.exe\" install --config {pathToConfigFile}\\mongosqld.conf\nnet start mongosql\n\n\nWindows returns mongosql service installed if your installation\nsucceeded.\n\n\n5\nConnect to the MongoDB Connector for BI\u00b6\nLaunch your business intelligence tool, and connect to the MongoDB Connector for BI using\na MySQL driver and the following settings:\n\n\n\n\n\n\nHost\nThe hostname of the server on which you installed the MongoDB Connector for BI.\n\nPort\n3307 by default.\n\n\n\nFor more details on connecting to the MongoDB Connector for BI, see\nUsing the MongoDB Connector for BI.\n\n\n\nChange the Schema File\u00b6\nIf you need to use a different schema and database:\n\nStop the mongosql service.\nEdit the schema.path setting in your configuration file.\nSave the configuration file.\nStart the mongosql service.\n\n\n\nInstall the C Authentication Plugin\nInstall the JDBC Authentication Plugin\n\n\n\n",
            "preview": "To set up MongoDB Connector for BI with a business intelligence tool such as Tableau, follow the steps on this page.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-c/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/using-the-bi/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-jdbc/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "https://www.mongodb.com/download-center",
                "https://docs.mongodb.com/manual/reference/connection-string/"
            ]
        },
        {
            "slug": "reference/auth-plugin-c/index.html",
            "title": "C Authentication Plugin \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "C Authentication Plugin",
                "Supported Platforms",
                "Install",
                "Windows",
                "MacOS and Linux",
                "Usage",
                "mysql Options",
                "Example Command",
                "ODBC Connection Parameter",
                "Configuration File",
                "Example Steps: Using the C Authentication Plugin",
                "Notes"
            ],
            "text": "\nC Authentication Plugin\u00b6\n\nOn this page\n\nSupported Platforms\nInstall\nUsage\nExample Steps: Using the C Authentication Plugin\nNotes\n\n\n\nNew in version 2.2.\n\nThe MongoDB Connector for BI provides a MySQL authentication plugin which implements the\nclient side of MongoDB-supported authentication mechanisms. The\nmongosql_auth plugin allows you to use MongoDB Connector for BI with a MongoDB\ninstance running with authentication enabled without needing to\ngenerate your own SSL certificates for authentication.\nThis plugin supports the following authentication mechanisms:\n\nSCRAM-SHA-1\nPLAIN\n\n\nSupported Platforms\u00b6\nThe plugin is built and tested on the following platforms (all x86_64):\n\nWindows 2008 R2\nOSX 10.12\nUbuntu 14.04\nRHEL 7.0\n\nThe plugin is built against MySQL 5.7.18 Community Edition (64-bit),\nand tested with MySQL 5.7.18 Community Edition and the MongoDB\nConnector for BI 2.2.\n\n\nInstall\u00b6\n\nWindows\u00b6\n\nDownload the MySQL 5.7.18 installer and install the\nproducts needed.\nDownload the mongosql_auth plugin component .msi installer and install the\nmongosql_auth plugin component.\n\n\n\nMacOS and Linux\u00b6\n\nDownload mongosql_auth plugin library from  the\nreleases page.\n\nAfter downloading, move the file mongosql_auth.so to either:\n\n<mysql-home>/lib/plugin/ directory.\nThe default location of <mysql-home> varies by platform.\nTo discover the location of the plugin directory, run the\nfollowing at the command line:\nmysql_config --plugindir\n\n\n\n\n- OR -\n\nA directory of your choice if you provide the\nplugin-dir=<your-install-dir> option to your MySQL client. See\nthe mysql client command example.\n\n\n\n\n\n\nUsage\u00b6\nThe exact procedure for using the C Authentication plugin library\nvaries depending on your SQL client.\nThis plugin can be used with the 64-bsit version of the the MySQL shell\nand the MySQL ODBC driver.\n\nmysql Options\u00b6\nThe following table lists some mysql command-line options available for\nuse with mongosql_auth. For a complete list of command line\noptions, refer to the MySQL client documentation.\n\n\n\n\n\n\n\nOption\nValue\nNotes\n\n\n\n--default-auth\nmongosql_auth\nUse the C Authentication plugin. You can specify the plugin\nas part of your command, include it as a ODBC\nConnection Parameter, or include it in a\nMySQL Configuration File.\n\n--user\n<your-username>\nPossible parameters to this option are\nsource=<authenticated-db> and\nmechanism=<auth-mechanism>. If no authenticated database\nis specified, it defaults to admin. If no authentication\nmechanism is specified, it defaults to SCRAM-SHA-1.\n\nNote\nIf you use both the source and mechanism parameters,\nseparate them with a & and enclose the entire option in\nsingle quotes. See the example command below.\n\n\n\n-p\nNone, shell will prompt\nRequired.\n\n--plugin-dir\n<your-plugin-dir>\nOptional. Defaults to <mysql-home>/lib/plugin/.\n\n\n\n\n\nExample Command\u00b6\nmysql '--user=myTestUser?source=test&mechanism=SCRAM-SHA-1' --default-auth=mongosql_auth --plugin-dir=/usr/bin/mysql/plugins -p\n\n\nThe above command specifies the user with username myTestUser\nwho is authenticated for the database test. The shell will prompt\nthe user for a password.\n\n\nODBC Connection Parameter\u00b6\nIf you are using the MySQL ODBC driver, the interface you use to\nconfigure your DSN may provide a\nfield where you can specify the default authentication\nplugin to use. Specifying mongosql_auth here will cause the\nODBC driver to use the mongosql_auth plugin by default.\n\n\nConfiguration File\u00b6\nMySQL configuration files can be found in many locations, as listed\nin the MySQL documentation.\nIn one of these files, add a line with default-auth=mongosql_auth to\nthe [client] section or create it if it does not yet exist.\nTo use this same configuration file with an ODBC DSN, provide the USE_MYCNF=1 connection parameter\nto your ODBC DSN.\n\n\n\nExample Steps: Using the C Authentication Plugin\u00b6\n\nIf you haven\u2019t yet set up authenticated users for MongoDB, do that\nfirst. See Enable Authentication for more information.\n\nStart a mongod instance with the --auth option. See\nAuthentication for more\ninformation about starting mongod with security enabled.\n\nStart mongosqld with the --auth option. See\nInstallation for more information about starting mongosqld.\nmongosqld --schema schema.drdl --auth\n\n\n\nConnect to mongosqld with your client program, using the\ndefault-auth=mongosql_auth option. The connection command\nvaries by client, but with the MySQL shell the command is as\nfollows:\nmysql --user=<username>?source=<some-db> --default-auth=mongosql_auth -p\n\n\n\n\nIn the above command, <some-db> should be the database for which\nthe user is authenticated. The shell will prompt the user for a password.\nSee the table above for\nadditional options.\n\n\nNotes\u00b6\n\nThe SCRAM-SHA-1 mechanism hashes the passwords in the client\nplugin; however, all other data is in cleartext. If possible, use\nwith encrypted connections.\nThe PLAIN mechanism sends the password in cleartext. As such, if\npossible, you should only use with encrypted connections.\n\n\n",
            "preview": "The MongoDB Connector for BI provides a MySQL authentication plugin which implements the client side of MongoDB-supported authentication mechanisms. The mongosql_auth plugin allows you to use MongoDB Connector for BI with a MongoDB instance running with authentication enabled without needing to generate your own SSL certificates for authentication.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/installation/",
                "https://dev.mysql.com/doc/refman/5.7/en/option-files.html",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://github.com/mongodb/mongosql-auth-c/releases",
                "http://docs.mongodb.com/manual/core/authentication/",
                "http://docs.mongodb.com/manual/tutorial/enable-authentication/",
                "https://dev.mysql.com/downloads/file/?id=470091",
                "https://docs.mongodb.com/manual/reference/glossary/",
                "https://dev.mysql.com/doc/refman/5.7/en/mysql.html"
            ]
        },
        {
            "slug": "reference/mongodrdl/index.html",
            "title": "mongodrdl \u2014 MongoDB Connector for BI 2.2",
            "tags": "mongodrdl, mongodb, man page",
            "headings": [
                "mongodrdl",
                "Description",
                "Command Line Options",
                "Core Options",
                "TLS/SSL Options",
                "Authentication Options",
                "Custom Filters",
                "Usage",
                "Generate a Schema",
                "Custom Filter",
                "Usage with Atlas"
            ],
            "text": "\nmongodrdl\u00b6\n\nOn this page\n\nDescription\nCommand Line Options\nCore Options\nTLS/SSL Options\nAuthentication Options\nCustom Filters\n\n\nUsage\nGenerate a Schema\nCustom Filter\n\n\nUsage with Atlas\n\n\n\nDescription\u00b6\n\n\nmongodrdl\u00b6\n\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nmongodrdl produces a schema based on contents of one or more\nmongod collections and writes them out into\n.drdl files understood by mongosqld.\nSee Schema Configuration for details on this format.\n\nImportant\nRestart mongosqld to apply any changes you make to your\nDRDL files.\n\n\n\nCommand Line Options\u00b6\n\nCore Options\u00b6\n\n\nmongodrdl\u00b6\n\n\n\n\n--help\u00b6\nReturns information on the options and use of mongodrdl.\n\n\n\n\n--version\u00b6\nReturns the mongodrdl release number.\n\n\n\n\n--verbose <level>, -v <level>\u00b6\nSpecifies that mongodrdl should provide more detailed log output. Include\nmultiple times for more verbosity (e.g. -vvvvv), or specify a numeric\nvalue (e.g. --verbose=5).\n\n\n\n\n--quiet\u00b6\nHides all log output.\n\n\n\n\n--host <hostname><:port>, -h <hostname><:port>\u00b6\nDefault: localhost:27017\nSpecifies a resolvable hostname for the mongod to which to\nconnect. By default, the mongodrdl attempts to connect to a MongoDB\ninstance running on the localhost on port number 27017.\nTo connect to a replica set, specify the\nreplSetName and a seed list of set members, as in\nthe following:\n<replSetName>/<hostname1><:port>,<hostname2><:port>,<...>\n\n\nYou can always connect directly to a single MongoDB instance by\nspecifying the host and port number directly.\n\n\n\n\n--port <port>\u00b6\nDefault: 27017\nSpecifies the TCP port on which the MongoDB instance listens for\nclient connections.\n\n\n\n\n--db <database>, -d <database>\u00b6\nSpecifies a database from which to generate a .drdl schema file.\n\n\n\n\n--collection <collection>, -c <collection>\u00b6\nSpecifies a collection from which to generate a .drdl schema file.\nIf you do not specify a collection, this option will use all collections in\nthe specified database or instance.\n\n\n\n\n--customFilterField <name>, -f <name>\u00b6\nSpecifies the field name to add for a custom MongoDB filter. See\nCustom Filters for more details.\n\n\n\n\n--out <path>, -o <path>\u00b6\nDefault: Standard out.\nSpecifies the path where mongodrdl will write the schema file. To\nsend the schema to standard output, specify \u201c-\u201d instead of\na path.\n\n\n\n\n--sampleSize <size>, -s <size>\u00b6\nDefault: 1000\nSpecifies the number of documents to sample when generating the\ncollection\u2019s schema.\n\n\n\n\n--uuidSubtype3Encoding <old|csharp|java>, -b <old|csharp|java>\u00b6\nSpecify the encoding used to generate UUID binary subtype 3. Choose\none of the following values:\n\nold: Old BSON binary subtype representation,\ncsharp: The C#/.NET legacy UUID representation, and\njava: The Java legacy UUID representation.\n\n\n\n\n\n--preJoined\u00b6\nGenerate unwound tables including parent columns, resulting in a\n\u201cpre-joined\u201d table.\n\n\n\n\nTLS/SSL Options\u00b6\n\n\n--ssl\u00b6\nDefault: False\nInstructs mongodrdl to use TLS/SSL when connecting to a\nMongoDB instance.\n\n\n\n\n--sslCAFile <filename>\u00b6\nSpecifies the MongoDB instance\u2019s .pem file containing the root\ncertificate chain from the Certificate Authority. Specify the file\nname of the .pem file using relative or absolute paths.\n\nWarning\nFor SSL connections (--ssl) to mongod and\nmongos, if the mongodrdl runs without the\n--sslCAFile, mongodrdl will not attempt\nto validate the server certificates. This creates a vulnerability\nto expired mongod and mongos certificates as\nwell as to foreign processes posing as valid mongod or\nmongos instances. Ensure that you always specify the\nCA file to validate the server certificates in cases where\nintrusion is a possibility.\n\n\n\n\n\n--sslPEMKeyFile <filename>\u00b6\nSpecifies the .pem file containing both the TLS/SSL certificate\nand key for the MongoDB instance. Specify the file name of the\n.pem file using relative or absolute paths.\nThis option is required when using the --ssl option to\nconnect to a mongod or mongos that has\nCAFile enabled without\nallowConnectionsWithoutCertificates.\n\n\n\n\n--sslPEMKeyPassword <password>\u00b6\nSpecifies the path to a file containing the certificate and private\nkey for connecting to MongoDB.\n\n\n\n\n--sslCRLFile <filename>\u00b6\nSpecifies the .pem file that contains the Certificate Revocation\nList. Specify the file name of the .pem file using relative or\nabsolute paths.\n\n\n\n\n--sslAllowInvalidCertificates\u00b6\nPermits the MongoDB instance to present an invalid server SSL/TLS\ncertificate. When using the allowInvalidCertificates\nsetting, MongoDB logs the use of the invalid certificate as a warning.\n\n\n\n\n--sslAllowInvalidHostnames\u00b6\nDisables the validation of the hostnames in TLS/SSL certificates. Allows\nmongodrdl to connect to MongoDB instances if the hostname their\ncertificates do not match the specified hostname.\n\n\n\n\n--sslFIPSMode\u00b6\nDirects the mongodrdl to use the FIPS mode of the installed OpenSSL\nlibrary. Your system must have a FIPS compliant OpenSSL library to use\nthe --sslFIPSMode option.\n\n\n\n\nAuthentication Options\u00b6\n\n\n--username <username>, -u <username>\u00b6\nSpecifies a username with which to authenticate to a MongoDB database\nthat uses authentication. Use in conjunction with the --password and\n--authenticationDatabase options.\n\n\n\n\n--password <password>, -p <password>\u00b6\nSpecifies a password with which to authenticate to a MongoDB database\nthat uses authentication. Use in conjunction with the --username and\n--authenticationDatabase options.\n\n\n\n\n--authenticationDatabase <dbname>\u00b6\nSpecifies the database in which the user is created.\nSee Authentication Database.\n\n\n\n\n--authenticationMechanism <name>\u00b6\nDefault: SCRAM-SHA-1\nSpecifies the authentication mechanism the mongodrdl instance uses to\nauthenticate to the mongod or mongos.\n\n\n\n\n\n\nValue\nDescription\n\n\n\nSCRAM-SHA-1\nRFC 5802 standard\nSalted Challenge Response Authentication Mechanism using the SHA1\nhash function.\n\nMONGODB-CR\nMongoDB challenge/response authentication.\n\nMONGODB-X509\nMongoDB TLS/SSL certificate authentication.\n\nPLAIN (LDAP SASL)\nExternal authentication using LDAP. You can also use PLAIN\nfor authenticating in-database users. PLAIN transmits\npasswords in plain text. This mechanism is available only in\nMongoDB Enterprise.\n\n\n\n\n\n\n\nCustom Filters\u00b6\nYou can add a special field to your schema to pass a custom\nMongoDB $match query string to your MongoDB instance.\nUse the --customFilterField option with mongodrdl to name\na custom filter field. This field passes a native MongoDB\n$match stage to use as the first stage of the aggregation\npipeline. The MongoDB Connector for BI applies this stage before any additional stages\npushed down from SQL.\nThe query can refer to any field in the collection, even if the fields\nwere not exposed in the relational schema.\nFor an example, see Custom Filter.\n\n\n\nUsage\u00b6\n\nGenerate a Schema\u00b6\nGiven documents of the following shape in the collection abc in the\ndatabase test:\n{\n    \"_id\": ObjectId(),\n    \"close\": 7.45,\n    \"detail\": { \"a\": 2, \"b\": 3 }\n}\n\n\nYou can use mongodrdl to generate a schema based on this collection\nby running the following command:\nmongodrdl -d test -c abc -o schema.drdl\n\n\nThe generated schema file schema.drdl will look similar to the following:\nschema:\n- db: test\n  tables:\n  - table: abc\n    collection: abc\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: close\n      MongoType: float64\n      SqlName: close\n      SqlType: numeric\n    - Name: detail.a\n      MongoType: float64\n      SqlName: detail.a\n      SqlType: numeric\n    - Name: detail.b\n      MongoType: float64\n      SqlName: detail.b\n      SqlType: numeric\n\n\n\n\nCustom Filter\u00b6\nTo use this field, specify the --customFilterField flag with the name you\nwant this field to have:\nmongodrdl [ other options ] --customFilterField \"_MONGOFILTER\" -o schema.drdl\n\n\nYour DRDL file schema.drdl will include the following field in every generated table:\n- name: _MONGOFILTER\n  mongotype: mongo.Filter\n  sqltype: varchar\n\n\nTo add the special MongoDB query stage to your standard SQL, use the following\nSQL syntax:\nSELECT <normal>\n   FROM <tablename>\n   WHERE <normal conditions> AND\n       \"_MONGOFILTER\"='{ <json string that represents query to use> }'\n\nSELECT name,age\n  FROM users\n  WHERE active='t' AND\n    \"_MONGOFILTER\"='{\"addr\":{\"$elemMatch\":{\"city\":\"Springfield\",\"state\":\"CA\"}}}'\n\n\nThe MongoDB Connector for BI will translate the above SQL into the following MongoDB\naggregation expression:\ndb.users.aggregate([\n   {$match:{\"addr\":{\"$elemMatch\":{\"city\":\"Springfield\",\"state\":\"CA\"}}},\n   {$match:{\"active\":true}},\n   {$project:{\"name\":1, \"age\":1}}\n]);\n\n\nYou can use this custom filter in any business intelligence tool by filtering\non your special field and providing the value to match as a single quoted string\nrepresenting valid JSON. All quotes inside the JSON must be double\nquotes.\n\nSee also\nMongoDB Connector for BI\n\n\n\n\nUsage with Atlas\u00b6\nAtlas is a cloud service for\nrunning, monitoring, and maintaining MongoDB deployments, including the\nprovisioning of dedicated servers for the MongoDB instances.\nTo create a DRDL file from an Atlas database, use the\nfollowing command format:\nmongodrdl --host <domain0>.mongodb.net:27017,<domain1>.mongodb.net:27017,... -u <username> -p <password> --ssl --authenticationDatabase=admin -d <database>\n\n\n\n",
            "preview": "The mongodrdl command man page.",
            "links": [
                "https://docs.mongodb.com/manual/core/security-users/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://tools.ietf.org/html/rfc5802",
                "https://docs.mongodb.com/manual/core/security-mongodb-cr/",
                "https://docs.mongodb.com/manual/core/security-x.509/",
                "https://docs.mongodb.com/manual/core/authentication-mechanisms-enterprise/",
                "https://docs.mongodb.com/bi-connector/current/",
                "https://docs.atlas.mongodb.com/",
                "https://docs.mongodb.com/manual/reference/configuration-options/",
                "https://docs.mongodb.com/manual/core/security-scram-sha-1/",
                "http://www.mongodb.com/products/mongodb-enterprise?jmp=docs",
                "https://docs.mongodb.com/bi-connector/current/schema-configuration/",
                "https://docs.mongodb.com/manual/reference/glossary/",
                "https://docs.mongodb.com/manual/aggregation/"
            ]
        },
        {
            "slug": "reference/mongosqld/index.html",
            "title": "mongosqld \u2014 MongoDB Connector for BI 2.2",
            "tags": "mongosqld, mongodb, man page",
            "headings": [
                "mongosqld",
                "Description",
                "Command Line Options",
                "Core Options",
                "Log Options",
                "MongoDB TLS/SSL Options",
                "Client TLS/SSL Options",
                "Socket Options",
                "Configuration File",
                "Logging Options",
                "Schema Options",
                "Runtime Options",
                "Network Options",
                "Security Options",
                "MongoDB Host Options",
                "Process Management Options",
                "Example",
                "Usage with Atlas"
            ],
            "text": "\nmongosqld\u00b6\n\nOn this page\n\nDescription\nCommand Line Options\nConfiguration File\nUsage with Atlas\n\n\n\nDescription\u00b6\n\n\nmongosqld\u00b6\n\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nmongosqld accepts incoming requests from a MySQL client, and\nproxies those requests to a mongod or mongos\ninstance.\n\n\nCommand Line Options\u00b6\n\nCore Options\u00b6\n\n\nmongosqld\u00b6\n\n\n\n\n--help\u00b6\nReturns information on the options and use of mongosqld.\n\n\n\n\n--addr\u00b6\nDefault: 127.0.0.1:3307\nSpecifies the host address to listen on.\n\n\n\n\n--version\u00b6\nReturns the mongosqld release number.\n\n\n\n\n--config <path>\u00b6\nSpecifies the path to a configuration file.\n\n\n\n\n--schema <filename>\u00b6\nSpecifies the path to a schema file or the schema directory.\n\n\n\n\n--schemaDirectory <directoryname>\u00b6\n\nDeprecated since version 2.2.\n\nUse --schema instead.\n\n\n\n\n--mongo-uri <uri>\u00b6\nDefault: mongodb://localhost:27017\nSpecifies a MongoDB connection string to connect to.\nThe --mongo-uri option only supports the following options within the connection\nstring:\n\nreadPreference\nreadPreferenceTags\nreplicaSet\n\nFor more information on these URI options see\nRead Preference Options and\nReplica Set Option.\nFor options set in the Mongo URI not included in the list above, use the\nequivalent mongosqld option. For the complete list of mongosqld options,\nsee Command Line Options.\n\nExample\nInstead of specifying a username and password in\nyour connection string, run mongosqld with the --auth option to\ndirect mongosqld to pass the authentication credentials provided by the\nMySQL client to the MongoDB server.\nSimilarly, instead of enabling ssl in the connection string,\nrun mongosqld with --mongo-ssl.\n\nURI options not in the list above nor in the list of supported mongosqld\noptions are not supported.\n\n\n\n\n--mongo-versionCompatibility <version-number>\u00b6\nSpecifies that mongosqld must only use features supported by the\nspecified version of MongoDB. Only necessary when used with\nreplica sets in which members use different MongoDB versions.\nThe minimum allowable MongoDB version is 3.2.\n\n\n\n\n--maxVarcharLength <length>\u00b6\n\nNew in version 2.2.\n\nSpecifies the maximum length, in characters, for all varchar fields. If\nmongosqld encounters a string that is longer than the maximum length,\nmongosqld truncates it to the maximum length and logs a warning.\n\n\n\n\nLog Options\u00b6\n\n\n--logAppend\u00b6\nAppend new logging output to an existing log file specified by\n--logPath.\n\n\n\n\n--logPath <filename>\u00b6\nDefault: stderr\nSpecifies a path to a log file for storing logging output.\n\n\n\n\n--verbose, -v\u00b6\nSpecifies that mongosqld should provide more detailed log output. Include\nmultiple times for more verbosity (e.g. -vvvvv).\n\n\n\n\n--quiet\u00b6\nHides all log output.\n\n\n\n\nMongoDB TLS/SSL Options\u00b6\n\n\n--mongo-ssl\u00b6\nDefault: False\nInstructs mongosqld to use TLS/SSL when connecting to a\nMongoDB instance.\n\n\n\n\n--mongo-sslPEMKeyFile <filename>\u00b6\nSpecifies the .pem file containing both the TLS/SSL certificate\nand key for the MongoDB instance. Specify the file name of the\n.pem file using relative or absolute paths.\nThis option is required when using the --mongo-ssl option to\nconnect to a mongod or mongos that has\nCAFile enabled without\nallowConnectionsWithoutCertificates.\n\n\n\n\n--mongo-sslPEMKeyPassword <password>\u00b6\nSpecifies the path to a file containing the certificate and private\nkey for connecting to MongoDB.\n\n\n\n\n--mongo-sslAllowInvalidHostnames\u00b6\nPermits mongosqld to connect to a MongoDB server whose\nhostname differs from the hostname on its TLS/SSL certificate.\n\n\n\n\n--mongo-sslAllowInvalidCertificates\u00b6\nPermits the MongoDB instance to present an invalid server SSL/TLS\ncertificate. When using the allowInvalidCertificates\nsetting, MongoDB logs the use of the invalid certificate as a warning.\n\n\n\n\n--mongo-sslCAFile <filename>\u00b6\nSpecifies the MongoDB instance\u2019s .pem file containing the root\ncertificate chain from the Certificate Authority. Specify the file\nname of the .pem file using relative or absolute paths.\n\nWarning\nFor SSL connections (--ssl) to mongod and\nmongos, if the mongosqld runs without the\n--mongo-sslCAFile, mongosqld will not attempt\nto validate the server certificates. This creates a vulnerability\nto expired mongod and mongos certificates as\nwell as to foreign processes posing as valid mongod or\nmongos instances. Ensure that you always specify the\nCA file to validate the server certificates in cases where\nintrusion is a possibility.\n\n\n\n\n\n--mongo-sslCRLFile <filename>\u00b6\nSpecifies the MongoDB instance\u2019s .pem file containing\nthe certificate revocation list.\n\n\n\n\n--mongo-sslFIPSMode\u00b6\nEnable FIPS mode in the installed OpenSSL library.\n\n\n\n\nClient TLS/SSL Options\u00b6\n\n\n--sslPEMKeyFile <filename>\u00b6\nSpecifies the .pem file containing both the TLS/SSL certificate\nand key for MySQL clients. Specify the file name of the .pem\nfile using relative or absolute paths.\n\n\n\n\n--sslPEMKeyPassword <password>\u00b6\nSpecifies the password used to decrypt the private key specified by\n--sslPEMKeyFile.\n\n\n\n\n--sslAllowInvalidCertificates\u00b6\nPermits MySQL clients to present invalid client TLS/SSL certificates.\n\n\n\n\n--sslAllowInvalidHostnames\u00b6\nPermits mongosqld to connect to a MySQL server whose\nhostname differs from the hostname on its TLS/SSL certificate.\n\n\n\n\n--sslCAFile <filename>\u00b6\nSpecifies the MySQL client\u2019s .pem file containing the root\ncertificate chain from the Certificate Authority. Specify the file\nname of the .pem file using relative or absolute paths.\n\n\n\n\n--sslCRLFile <filename>\u00b6\nSpecifies the MySQL client\u2019s .pem file containing the\ncertificate revocation list.\n\n\n\n\n--auth\u00b6\nRequire authentication for incoming client requests.\n\n\n\n\n--defaultAuthSource <authSource>\u00b6\nDefault: admin\nSpecifies the default MongoDB authentication source.\nSet this value to specify a default source that mongosqld\nuses when authenticating with a MongoDB database. The\nauthentication mechanisms\nGSSAPI and PLAIN use the $external source, while\nSCRAM-SHA-1 uses a MongoDB database as its source.\nIf no value is given for this option it defaults to the the\nMongoDB admin database.\nThe $external authentication source stores a reference\nto system users in a MongoDB database called $external,\nbut the credentials are stored in an external,\nnon-MongoDB system, such as an LDAP server.\nAny connection which uses the default value can omit the\nsource parameter from its MySQL\nor Tableau username.\n\n\n\n\n--defaultAuthMechanism <authMechanism>\u00b6\nDefault: SCRAM-SHA-1\nSpecifies the default authentication mechanism. Set this value to\nspecify a default mechanism for connecting to mongosqld. Any\nconnection which uses this specified default value can omit\nthe mechanism value from its MySQL or\nTableau username.\n\n\n\n\nSocket Options\u00b6\n\n\n--filePermissions <mode>\u00b6\nDefault: 448\nSpecify the permissions for the Unix domain socket file.\n\n\n\n\n--noUnixSocket\u00b6\nDisable listening on Unix domain sockets.\n\n\n\n\n--unixSocketPrefix <path>\u00b6\nDefault: /tmp\nSpecify an alternative directory for the mongosqld Unix domain\nsocket.\nmongosqld will create a socket file called mysql.sock underneath\nthis path. If you do not specify --unixSocketPrefix, the socket will exist at\n/tmp/mysql.sock.\n\n\n\n\n\nConfiguration File\u00b6\nYou may configure mongosqld using a YAML\nconfiguration file. This file may contain the settings listed in the\nfollowing sections.\n\nLogging Options\u00b6\nsystemLog:\n  logAppend: <boolean>\n  path: <string>\n  quiet: <boolean>\n  verbosity: <integer>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nsystemLog.logAppend\u00b6\n\n\n\nboolean\n--logAppend\n\n\n\nsystemLog.path\u00b6\n\n\n\nstring\n--logPath\n\n\n\nsystemLog.quiet\u00b6\n\n\n\nboolean\n--quiet\n\n\n\nsystemLog.verbosity\u00b6\n\n\n\ninteger\n--verbose\n\n\n\n\n\nSchema Options\u00b6\nschema:\n  path: <string>\n  maxVarcharLength: <integer>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nschema.path\u00b6\n\n\n\nstring\n--schema\n\n\n\nschema.maxVarcharLength\u00b6\n\n\n\ninteger\n--maxVarcharLength\n\n\n\n\n\nRuntime Options\u00b6\nruntime:\n  memory:\n    maxPerStage: <integer>\n\n\n\n\nruntime.memory.maxPerStage\u00b6\nType: integer\nDefault: unlimited\nSpecifies the maximum amount of memory in bytes that a query execution\nstage may use.\n\n\n\n\nNetwork Options\u00b6\nnet:\n  bindIp: <string>\n  port: <integer>\n  unixDomainSocket:\n    enabled: <boolean>\n    pathPrefix: <string>\n    filePermissions: <string>\n  ssl:\n    allowInvalidCertificates: <boolean>\n    PEMKeyFile: <string>\n    PEMKeyPassword: <string>\n    CAFile: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nnet.bindIp\u00b6\n\n\n\nstring\nThe hostname component of --addr\n\nChanged in version 2.2: To bind to multiple IP addresses, enter a list of comma separated values.\n\n\nExample\n\u201c72.198.41.200,72.198.41.201,72.198.41.202\u201d\n\n\n\n\n\nnet.port\u00b6\n\n\n\ninteger\nThe port component of --addr\n\n\n\nnet.unixDomainSocket.enabled\u00b6\n\n\n\nboolean\nInverse of --noUnixSocket\n\n\n\nnet.unixDomainSocket.pathPrefix\u00b6\n\n\n\nstring\n--unixSocketPrefix\n\n\n\nnet.unixDomainSocket.filePermissions\u00b6\n\n\n\nstring\n--filePermissions\n\n\n\nnet.ssl.allowInvalidCertificates\u00b6\n\n\n\nboolean\n--sslAllowInvalidCertificates\n\n\n\nnet.ssl.PEMKeyFile\u00b6\n\n\n\nstring\n--sslPEMKeyFile\n\n\n\nnet.ssl.PEMKeyPassword\u00b6\n\n\n\nstring\n--sslPEMKeyPassword\n\n\n\nnet.ssl.CAFile\u00b6\n\n\n\nstring\n--sslCAFile\n\n\n\n\n\nSecurity Options\u00b6\nsecurity:\n  enabled: <boolean>\n  defaultMechanism: <string>\n  defaultSource: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nsecurity.enabled\u00b6\n\n\n\nboolean\n--auth\n\n\n\nsecurity.defaultMechanism\u00b6\n\n\n\nstring\n--defaultAuthMechanism\n\n\n\nsecurity.defaultSource\u00b6\n\n\n\nstring\n--defaultAuthSource\n\n\n\n\n\nMongoDB Host Options\u00b6\nmongodb:\n  versionCompatibility: <string>\n  net:\n    uri: <string>\n    ssl:\n      enabled: <boolean>\n      allowInvalidCertificates: <boolean>\n      allowInvalidHostnames: <boolean>\n      PEMKeyFile: <string>\n      PEMKeyPassword: <string>\n      CAFile: <string>\n      CRLFile: <string>\n      FIPSMode: <boolean>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nmongodb.versionCompatibility\u00b6\n\n\n\nstring\n--mongo-versionCompatibility\n\n\n\nmongodb.net.uri\u00b6\n\n\n\nstring\n--mongo-uri\n\n\n\nmongodb.net.ssl.enabled\u00b6\n\n\n\nboolean\n--mongo-ssl\n\n\n\nmongodb.net.ssl.allowInvalidCertificates\u00b6\n\n\n\nboolean\n--mongo-sslAllowInvalidCertificates\n\n\n\nmongodb.net.ssl.allowInvalidHostnames\u00b6\n\n\n\nboolean\n--mongo-sslAllowInvalidHostnames\n\n\n\nmongodb.net.ssl.PEMKeyFile\u00b6\n\n\n\nstring\n--mongo-sslPEMKeyFile\n\n\n\nmongodb.net.ssl.PEMKeyPassword\u00b6\n\n\n\nstring\n--mongo-sslPEMKeyPassword\n\n\n\nmongodb.net.ssl.CAFile\u00b6\n\n\n\nstring\n--mongo-sslCAFile\n\n\n\nmongodb.net.ssl.CRLFile\u00b6\n\n\n\nstring\n--mongo-sslCRLFile\n\n\n\nmongodb.net.ssl.FIPSMode\u00b6\n\n\n\nboolean\n--mongo-sslFIPSMode\n\n\n\n\n\nProcess Management Options\u00b6\nprocessManagement:\n  service:\n    name: <string>\n    displayName: <string>\n    description: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nprocessManagement.service.name\u00b6\n\n\n\nstring\n--serviceName\n\n\n\nprocessManagement.service.displayName\u00b6\n\n\n\nstring\n--serviceDisplayName\n\n\n\nprocessManagement.service.description\u00b6\n\n\n\nstring\n--serviceDescription\n\n\n\n\n\nExample\u00b6\nIf you wish to specify a configuration file which saves logs to\n/var/log/mongosqld.log and loads a schema from /var/schema.drdl,\nyou may save a file such as the following to /etc/mongosqld.conf:\nsystemLog:\n  path: /var/log/mongosqld.log\nschema:\n  path: \"/var/schema.drdl\"\n\n\nYou may then start mongosqld with the --config\noption:\nmongosqld --config /etc/mongosqld.conf\n\n\n\n\n\nUsage with Atlas\u00b6\nAtlas is a cloud service for\nrunning, monitoring, and maintaining MongoDB deployments, including the\nprovisioning of dedicated servers for the MongoDB instances.\nAtlas uses TLS/SSL to encrypt connections and enforces authentication by\ndefault.\n\nNote\nWith the MongoDB Atlas free tier, MongoDB Connector for BI cannot run aggregation pipelines\nusing the allowDiskUse option. This option allows aggregation stages to\nwrite data as temporary files to disk. To review the MongoDB Atlas free\ntier constraints, see the MongoDB Atlas manual.\n\nTo connect the\nMongoDB Connector for BI\nto an Atlas cluster, you must provide mongosqld with a\n.pem key file.\nmongosqld can use any valid TLS certificate issued by a\ncertificate authority, or a self-signed certificate. If you use a\nself-signed certificate, although the communications channel will be\nencrypted, there will be no validation of server identity. Although\nsuch a situation will prevent eavesdropping on the connection, it\nleaves you vulnerable to a man-in-the-middle attack. Using a\ncertificate signed by a trusted certificate authority will permit your\nMySQL client to verify the server\u2019s identity.\nFor testing purposes, you can create a .pem key file named test.pem\nusing the openssl tool:\nopenssl req -nodes -newkey rsa:2048 -keyout test.key -out test.crt -x509 -days 365 -subj \"/C=US/ST=test/L=test/O=test Security/OU=IT Department/CN=test.com\"\ncat test.crt test.key > test.pem\n\n\nStart mongosqld with the --auth and\n--sslPEMKeyFile options.\nIf you named your key file test.pem as in the previous example, you\ncan run the following, substituting your schema file and\ncluster URI:\n\nNote\nDo not specify a username and password in --mongo-uri. The\nconnection string should only contain the list of servers.\n\nmongosqld --mongo-ssl --auth --sslPEMKeyFile test.pem --schema <schema.drdl> --mongo-uri <uri>\n\n\nPass your username, password, and authentication database to your SQL\nclient. For example, using mysql without verifying your mongosqld\nserver certificate:\nmysql --host <mongosqld-host> --port <mongosqld-port> -u <username>?source=admin -p --ssl-mode required --enable-cleartext-plugin\n\n\nRefer to Connect from the MySQL Client for more details on using the\nmysql client with the MongoDB Connector for BI.\n\n",
            "preview": "The mongosqld command man page.",
            "links": [
                "http://yaml.org/",
                "https://docs.mongodb.com/bi-connector/current/connect/tableau/",
                "https://docs.mongodb.com/manual/reference/program/mongos.exe/",
                "https://docs.atlas.mongodb.com/",
                "https://docs.mongodb.com/manual/reference/configuration-options/",
                "https://www.mongodb.com/download-center?jmp=tbl",
                "https://docs.mongodb.com/bi-connector/current/connect/mysql/",
                "https://docs.mongodb.com/bi-connector/current/schema-configuration/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "https://docs.mongodb.com/manual/reference/connection-string/",
                "https://docs.atlas.mongodb.com/create-new-cluster/"
            ]
        },
        {
            "slug": "release-notes/index.html",
            "title": "Release Notes for MongoDB Connector for BI \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Release Notes for MongoDB Connector for BI",
                "MongoDB Connector for BI 2.2.0",
                "MongoDB Connector for BI 2.1.0",
                "MongoDB Connector for BI 2.0.0",
                "Improved Server-Side Execution",
                "Pass-through Authentication",
                "Simplified Architecture",
                "SQL Compatibility",
                "MongoDB Connector for BI 2.0.2",
                "MongoDB Connector for BI 2.0.1",
                "MongoDB Connector for BI 1.0.0",
                "MongoDB Connector for BI 1.1.3",
                "MongoDB Connector for BI 1.1.2",
                "MongoDB Connector for BI 1.1.1",
                "MongoDB Connector for BI 1.1.0"
            ],
            "text": "\nRelease Notes for MongoDB Connector for BI\u00b6\n\nOn this page\n\nMongoDB Connector for BI 2.2.0\nMongoDB Connector for BI 2.1.0\nMongoDB Connector for BI 2.0.0\nMongoDB Connector for BI 1.0.0\n\n\n\nMongoDB Connector for BI 2.2.0\u00b6\nReleased Jul 31, 2017\n\nSupports authenticating directly against MongoDB using the new\nC and\nJDBC authentication plugins.\nThese plugins support\nSCRAM-SHA-1 and\nPLAIN mechanisms and remove the\nSSL requirement for authentication. The authentication plugins can be\nfound on GitHub:\n\nC\nJDBC.\n\n\nSupports configuration files for\nmongosqld.\n\nSupports installing and running\nmongosqld as a Windows system service.\n\nProvides a Windows MSI installer for the MongoDB Connector for BI.\n\nProvides new command line arguments for\ndefault auth mechanism and database:\n\nAuthentication Options:\n\n--defaultAuthDatabase\ndefault user source (default of admin)\n\n--defaultAuthMechanism arg\ndefault authentication mechanism (default of\nSCRAM-SHA-1)\n\n\n\n\n\nProvides a new startup option to specify default\nVARCHAR length\n\nProvides mongosqld status metrics with SHOW STATUS\n\nReports the following metrics reported:\n\nConnections\nQueries\nBytesSent\nThreads Connected\n\n\n\n\nCan bind mongosqld to multiple\nIP addresses\n\nProvides a new runtime options\nto limit memory usage of GROUP, SORT, and JOIN stages\n\n\n\n\nMongoDB Connector for BI 2.1.0\u00b6\n\nProvides substantial performance improvements for some common JOIN\nscenarios.\nPushes $match stages earlier in the aggregation pipeline to improve to\nindex utilization.\nPushes down more SQL functions and operators to the aggregation pipeline.\nSupports additional SQL language features, such as USE and\nSHOW CREATE TABLE statements, STRAIGHT_JOIN, the unary\nplus (+) operator, and the INTERVAL keyword in\ndate arithmetic.\n\n\nNote\nmongosqld no longer offers the --fork option.\nTo run mongosqld in the background, use the nohup\ncommand:\nnohup mongosqld [options] &\n\n\n\n\n\nMongoDB Connector for BI 2.0.0\u00b6\nReleased Nov 29, 2016\n\nImproved Server-Side Execution\u00b6\nThe MongoDB Connector for BI delivers significant performance and scalability improvements\nby moving as much execution as possible to the underlying MongoDB\ninstance. Pushing execution down to the server reduces network\nlatency and reduces bandwidth consumption.\nThis approach also reduces memory and CPU consumption in the MongoDB Connector for BI itself.\n\n\nPass-through Authentication\u00b6\nThe user authentication process is now passed through the MongoDB Connector for BI to the\nunderlying MongoDB instance. Users now authenticate as a user already\ncreated within MongoDB.\n\n\nSimplified Architecture\u00b6\nThe MongoDB Connector for BI package is now trimmed down from four separate components to\ntwo:\n\nmongodrdl\nThis tool connects to a MongoDB instance and\ngenerates a Document-Relational Definition Language (DRDL)\nfile, which maps a given collection shape to relational schema.\nmongosqld\nOnce installed and run as a daemon,\nmongosqld responds to SQL queries, requests for DB\ninformation, and schema from the requesting BI tool via the MySQL\nwire protocol.\nmongosqld requires at least one Document Relational Definition Language file to start.\nYou will need to have defined your schema with\nmongodrdl before starting mongosqld.\n\n\n\n\nSQL Compatibility\u00b6\nMongoDB Connector for BI Version 2.x is compatible with SQL-99 SELECT statements, and uses\nthe MySQL wire protocol.\n\nSee also\nSupported SQL Functions and Operators\n\n\n\nMongoDB Connector for BI 2.0.2\u00b6\nReleased Jan 5, 2017\n\nHides .pem key file passwords in logs.\nmongodrdl ignores binary fields when generating DRDL files.\nSupports queries that SELECT variables prefixed with \u201cmongodb\u201d.\nFixes incorrect result set from a cross join.\nSupports leading \u201c.\u201d characters on table names.\n\n\n\nMongoDB Connector for BI 2.0.1\u00b6\nReleased Dec 13, 2016\n\nFixes precedence issue with the NOT operator.\nFixes error looking up privilege information in databases with capital\nletters.\nSupports LIKE pattern matching in SHOW COLUMNS queries.\nImproves formatting of aggregation pipeline in logs.\nFixes substring function when the combined length of the\nstarting index and substring exceeds the length of the\nstring.\n\n\n\n\nMongoDB Connector for BI 1.0.0\u00b6\nReleased Dec 8, 2015\nMongoDB Connector for BI 1.0 is now available. It\nallows users to visualize their MongoDB Enterprise data using existing\nrelational business intelligence tools.\n\nMongoDB Connector for BI 1.1.3\u00b6\nReleased Apr 4, 2016\n\nImproves JOIN performance.\nSupports packages for Debian and Ubuntu.\n\n\n\nMongoDB Connector for BI 1.1.2\u00b6\nReleased Feb 3, 2016\n\nPushes down the ORDER BY clause as a $sort stage in the\naggregation pipeline.\n\n\n\nMongoDB Connector for BI 1.1.1\u00b6\nReleased Jan 27, 2016\n\nIgnores collections prefixed with \u201csystem.\u201d when generating the\nDRDL file for a database with mongodrdl.\nChecks if file is writable before sampling when generating the\nDRDL file with program:mongodrdl.\n\n\n\nMongoDB Connector for BI 1.1.0\u00b6\nReleased Jan 12, 2016\n\nSupports renaming columns using the sqlname field in DRDL\nfiles.\nSupports the mongotype: geo.2darray DRDL field for mapping\ngeospatial data.\n\n\n\n",
            "preview": "Supports authenticating directly against MongoDB using the new C and JDBC authentication plugins. These plugins support SCRAM-SHA-1 and PLAIN mechanisms and remove the SSL requirement for authentication. The authentication plugins can be found on GitHub:",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/installation/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-c/",
                "http://docs.mongodb.com/manual/applications/geospatial-indexes",
                "http://docs.mongodb.com/manual/core/security-scram-sha-1",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://docs.mongodb.com/bi-connector/current/",
                "https://dev.mysql.com/doc/refman/5.7/en/show-status.html",
                "https://github.com/mongodb/mongosql-auth-c/releases",
                "https://github.com/mongodb/mongosql-auth-java/releases",
                "https://docs.mongodb.com/bi-connector/current/schema-configuration/",
                "https://docs.mongodb.com/bi-connector/current/tutorial/install-auth-plugin-jdbc/",
                "http://docs.mongodb.com/manual/core/security-ldap",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "https://docs.mongodb.com/bi-connector/current/supported-operations/"
            ]
        },
        {
            "slug": "schema-configuration/index.html",
            "title": "Schema Configuration \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Schema Configuration",
                "Document Relational Definition Language",
                "File Format",
                "Example",
                "Field Types",
                "Embedded Documents",
                "Example",
                "Arrays",
                "Example",
                "Pre-Joining",
                "Custom Filters",
                "Aggregation Pipelines",
                "Aggregation Pipelines using Views",
                "Aggregation Pipelines in DRDL",
                "Geospatial Data",
                "Example"
            ],
            "text": "\nSchema Configuration\u00b6\n\nOn this page\n\nDocument Relational Definition Language\nField Types\nEmbedded Documents\nArrays\nCustom Filters\nAggregation Pipelines\nGeospatial Data\n\n\nBusiness intelligence tools connect to a data source and, given a fixed\ntabular schema, allow the user to visually explore their data. As\nMongoDB uses a flexible schema, these tools\ncurrently cannot use MongoDB as a native data source.\nTo use MongoDB with a relational business intelligence tool such as\nTableau, you must define a relational\nmapping for your MongoDB data.\nThe schema generation tool mongodrdl outputs such a schema in the\nDocument Relational Definition Language (DRDL) format, but you\nshould verify that the schema it proposes matches your data requirements.\nExamine both the table structure and field types to ensure that you can\ngenerate your intended reports.\nYou may have to manually edit the schema definition files to remove\nunneeded fields; add fields that mongodrdl did not discover\nwithin the subset of documents that it sampled; and modify erroneous\nfield types.\nYou may edit DRDL files to:\n\nAdd aggregation pipeline stages,\nAdd fields,\nRemove fields,\nRemove tables,\nRename tables, so long as the collection field remains the same,\nRename fields using the sqlname option\n\n\nImportant\nRestart mongosqld to apply any changes you make to your\nDRDL files.\n\n\nDocument Relational Definition Language\u00b6\nThe Document Relational Definition Language (DRDL) defines a\nrelational view of a MongoDB schema.\nmongodrdl samples documents from your MongoDB collections, and\nderives a DRDL file from those documents. mongosqld then\nuses the schema defined in DRDL files to allow MySQL clients to\nquery your MongoDB data.\n\nFile Format\u00b6\nThe DRDL file lists your databases, tables, and columns in\nYAML format.\nschema:\n- db: <database name>\n  tables:\n  - table: <SQL table name>\n    collection: <MongoDB collection name>\n    pipeline:\n    - <optional pipeline elements>\n    columns:\n    - Name: <MongoDB field name>\n      MongoType: <MongoDB field type>\n      SqlName: <mapped SQL column name>\n      SqlType: <mapped SQL column type>\n\n\n\n\nExample\u00b6\nGiven documents of the following shape in the collection abc in the\ndatabase test:\n{\n    \"_id\": ObjectId(),\n    \"close\": 7.45,\n    \"detail\": { \"a\": 2, \"b\": 3 }\n}\n\n\nYou can use mongodrdl to generate a schema based on this collection\nby running the following command:\nmongodrdl -d test -c abc -o schema.drdl\n\n\nThe generated schema file schema.drdl will look similar to the following:\nschema:\n- db: test\n  tables:\n  - table: abc\n    collection: abc\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: close\n      MongoType: float64\n      SqlName: close\n      SqlType: numeric\n    - Name: detail.a\n      MongoType: float64\n      SqlName: detail.a\n      SqlType: numeric\n    - Name: detail.b\n      MongoType: float64\n      SqlName: detail.b\n      SqlType: numeric\n\n\n\n\n\nField Types\u00b6\nThe MongoDB Connector for BI correctly maps fields that always contain the same data\ntype into the relational model. Schema generation deals specially\nwith the following cases:\n\n\n\n\n\n\nNumeric\nThe MongoDB Connector for BI uses the most precise numeric type that matches the\nsampled documents.\nIf a field in a collection always has the same data type, the MongoDB Connector for BI\nuses that type.\nIf a field in a collection can contain either floating point\nvalues or integers, the MongoDB Connector for BI uses type numeric.\n\n\nDates\nThe MongoDB Connector for BI treats any field of type data_date as the\nSQL timestamp type.\n\nTimestamps\nThe MongoDB Connector for BI ignores any field of type data_timestamp.\n\nObjectID\nThe MongoDB Connector for BI treats any field of type data_oid as\nthe SQL type varchar.\n\nUUID\nThe MongoDB Connector for BI treats any field of type UUID as the SQL type\nvarchar.\n\nGeospatial\nIf a collection contains a\ngeospatial index, the\nconnector maps the indexed field into an array of numeric\nlongitude-latitude coordinates.\nSee Geospatial Data for an example.\nmongodrdl will currently not recognize geospatial fields\nin a read-only view.\n\n\nHeterogeneous Fields\nIf a field contains inconsistent types, the MongoDB Connector for BI chooses the most\nfrequently sampled type.\nIf a field can contain either a type or an array of that type, the\ngenerated schema always specifies that the field contains an array.\n\nSee also\nHow do I skip data incompatible with my DRDL type definition?\n\n\n\n\n\n\n\nEmbedded Documents\u00b6\nThe MongoDB Connector for BI maps embedded documents to simple fields\nthat have a . separator character, making them appear similar to the way you\nwould reference them using dot notation in a\nMongoDB query.\nWhile Tableau properly quotes identifiers, within ad-hoc\nSQL expressions you must double-quote every identifier that contains .\ncharacters or mixed-case characters.\n\nExample\u00b6\nConsider the following document:\n{\n    \"_id\": 1,\n    \"familyName\": \"Partridge\",\n    \"hometown\" : \"Hollywood Hills\",\n    \"address\" : { \"street\": \"123 Main Street\",\n                  \"city\" : \"Hollywood\",\n                  \"state\" : \"CA\",\n                  \"zip\" : \"90210\" },\n    \"members_since\" : ISODate(\"2002-04-12T00:00:00Z\")\n}\n\n\nRunning mongodrdl on a collection containing this document\nresults in the following fields in the generated schema:\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\naddress.street\nvarchar\n\naddress.city\nvarchar\n\naddress.state\nvarchar\n\naddress.zip\nvarchar\n\nmembers_since\ntimestamp\n\n\n\n\n\n\nArrays\u00b6\nThe MongoDB Connector for BI exposes arrays to business intelligence tools using two\ncollections: one without the array, and the other having one document\nper array element.\n\nExample\u00b6\nIf you run mongodrdl on a collection families with the\nfollowing document:\n{\n   \"_id\": 1,\n   \"familyName\": \"Partridge\",\n   \"hometown\" : \"Hollywood Hills\",\n   \"familyMembers\" : [\n     {\n         \"firstname\" : \"Shirley\",\n         \"age\" : 42,\n         \"attributes\" : [\n             { \"name\" : \"instrument\", \"value\" : \"singer\" },\n             { \"name\" : \"role\", \"value\" : \"mom\" }\n         ]\n     },\n     {\n         \"firstname\" : \"Keith\",\n         \"age\" : 18,\n         \"attributes\" : [\n             { \"name\" : \"instrument\", \"value\" : \"guitar\" },\n             { \"name\" : \"role\", \"value\" : \"son\" }\n         ]\n     },\n     {\n         \"firstname\" : \"Laurie\",\n         \"age\" : 16,\n         \"attributes\" : [\n             { \"name\" : \"instrument\", \"value\" : \"keyboard\" },\n             { \"name\" : \"role\", \"value\" : \"sister\" }\n         ]\n     }]\n}\n\n\nThis results in the following three tables:\n\nfamilies\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\n\n\n\nfamilies_familyMembers\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyMembers.age\nnumeric\n\nfamilyMembers.firstname\nvarchar\n\nfamilyMembers_idx\nnumeric\n\n\n\n\nfamilies_familyMembers_attributes\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyMembers.attributes.name\nvarchar\n\nfamilyMembers.attributes.value\nvarchar\n\nfamilyMembers.attributes_idx\nnumeric\n\nfamilyMembers_idx\nnumeric\n\n\n\n\n\nYou can join these tables together to view the data in a denormalized\nformat. For example, you can list the people named in the above schema\ntogether with their family information using the following query:\nSELECT f.*, m.`familyMembers.firstname` FROM families_familyMembers m JOIN families f ON m._id = f._id;\n\n\n\n\nPre-Joining\u00b6\nIf you provide the --preJoined option to mongodrdl,\nthen the MongoDB Connector for BI adds the fields in the containing document to each\narray element\u2019s document, thus \u201cpre-joining\u201d the table.\nIn the previous example, the tables would contain the following\nadditional columns:\n\nfamilies_familyMembers\n\n\n\n\n\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\n\n\n\nfamilies_familyMembers_attributes\n\n\n\n\n\n\nfamilyMembers.age\nnumeric\n\nfamilyMembers.firstname\nvarchar\n\nfamilyMembers_idx\nnumeric\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\n\n\n\n\n\n\n\nCustom Filters\u00b6\nYou can add a column of type mongo.Filter to a collection in your\nDRDL file. This column type allows you to perform a custom\n$match query.\nFor example, given the following schema describing a cloud of points with\nup to three components:\nschema:\n- db: test\n  tables:\n  - table: points\n    collection: points\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: x\n      MongoType: float64\n      SqlName: x\n      SqlType: numeric\n    - Name: \"y\"\n      MongoType: float64\n      SqlName: \"y\"\n      SqlType: numeric\n    - Name: z\n      MongoType: float64\n      SqlName: z\n      SqlType: numeric\n    - Name: filter\n      MongoType: mongo.Filter\n      SqlName: filter\n      SqlType: varchar\n\n\nYou can select only three-dimensional points using the following query:\nSELECT x, y, z FROM points WHERE filter='{\"z\": {\"$exists\": true}}';\n\n\n\n\nAggregation Pipelines\u00b6\n\nAggregation Pipelines using Views\u00b6\nMongoDB 3.4 introduces Read-Only Views that you can\nuse to filter incompatible data.\nFor example, you can create a view in the test database that contains\nonly documents containing a number in the grade field of a grades\ncollection:\ndb.runCommand( { create: \"numericGrades\", viewOn: \"grades\", pipeline: [ { \"$match\": { \"grade\": { \"$type\": \"number\" } } } ] } )\n\n\nYou can then use mongodrdl to generate a schema from this view\nas you would a collection:\nmongodrdl -d test -c numericGrades\n\n\n\n\nAggregation Pipelines in DRDL\u00b6\nThe MongoDB Connector for BI can use aggregation pipelines as\npart of the schema to transform documents from the collection into the\nproper form for the relational tables.\nFor example, consider a simple document in the collection\nsimpleFamilies:\n{\n   \"_id\": 1,\n   \"familyName\": \"Partridge\",\n   \"familyMembers\" : [ \"Shirley\", \"Keith\", \"Laurie\"]\n}\n\n\nmongodrdl will generate a schema with the tables\nsimpleFamilies and simpleFamilies_familyMembers.\nThe table simpleFamilies_familyMembers enumerates each family\nmembers, and has the following pipeline:\npipeline:\n- $unwind:\n    includeArrayIndex: familyMembers_idx\n    path: $familyMembers\n\n\nThis pipeline uses $unwind to create a new record for each\nmember of familyMembers. The schema tracks the array index in\nthe field familyMembers_idx.\n\n\n\nGeospatial Data\u00b6\n\nNew in version 1.1.0.\n\nIf a collection contains a\ngeospatial index, the\nconnector maps the indexed field into an array of numeric\nlongitude-latitude coordinates.\n\nExample\u00b6\nGiven the following collection:\ndb.points.createIndex( { pos : \"2dsphere\" } )\ndb.points.insert({\n    pos : { type: \"Point\", coordinates: [ -73.97, 40.77 ] },\n    name: \"Central Park\",\n    category : \"Parks\"\n})\n\n\nmongodrdl generates the following schema:\nschema:\n- db: test\n  tables:\n  - table: points\n    collection: points\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: category\n      MongoType: string\n      SqlName: category\n      SqlType: varchar\n    - Name: name\n      MongoType: string\n      SqlName: name\n      SqlType: varchar\n    - Name: pos.coordinates\n      MongoType: geo.2darray\n      SqlName: pos.coordinates\n      SqlType: numeric[]\n\n\nmongodrdl will currently not recognize geospatial fields\nin a read-only view.\n\n\n",
            "preview": "Business intelligence tools connect to a data source and, given a fixed tabular schema, allow the user to visually explore their data. As MongoDB uses a flexible schema, these tools currently cannot use MongoDB as a native data source.",
            "links": [
                "http://docs.mongodb.com/manual/applications/geospatial-indexes",
                "http://docs.mongodb.com/manual/core/views",
                "https://www.tableau.com/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "http://yaml.org/",
                "https://docs.mongodb.com/manual/core/document/",
                "http://docs.mongodb.com/manual/data-modeling",
                "https://docs.mongodb.com/manual/reference/mongodb-extended-json/",
                "http://docs.mongodb.com/manual/reference/operator/aggregation/$match",
                "https://docs.mongodb.com/manual/core/aggregation-pipeline/",
                "https://docs.mongodb.com/bi-connector/current/reference/mongodrdl/",
                "https://docs.mongodb.com/bi-connector/current/faq/",
                "https://docs.mongodb.com/manual/reference/glossary/"
            ]
        },
        {
            "slug": "supported-operations/index.html",
            "title": "Supported SQL Functions and Operators \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Supported SQL Functions and Operators",
                "Comparison Functions and Operators",
                "Logical Operators",
                "Control Flow Functions and Operators",
                "String Functions",
                "Numeric Functions and Operators",
                "Date and Time Functions",
                "Cast Functions and Operators",
                "Subquery Constructors",
                "Information Functions",
                "GROUP BY (Aggregate) Functions",
                "Utility Statements",
                "Database Administration Statements"
            ],
            "text": "\nSupported SQL Functions and Operators\u00b6\nMongoDB Connector for BI Version 2.2 is compatible with SQL-99 SELECT statements.\nThe following tables list the various MySQL functions, constructors, and\noperators supported in MongoDB Connector for BI 2.2.\n\nSupported MySQL functions, constructors, and operators\n\nComparison Functions and Operators\nLogical Operators\nControl Flow Functions and Operators\nString Functions\nNumeric Functions and Operators\nDate and Time Functions\nCast Functions and Operators\nSubquery Constructors\nInformation Functions\nGROUP BY (Aggregate) Functions\nUtility Statements\nDatabase Administration Statements\n\n\n\nComparison Functions and Operators\u00b6\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nBETWEEN ... AND ...\nCheck whether a value is within a range of values\n\nCOALESCE()\nReturn the first non-NULL argument\n\n=\nEqual operator\n\n<=>\nNULL-safe equal to operator\n\n>\nGreater than operator\n\n>=\nGreater than or equal operator\n\nGREATEST()\nReturn the largest argument\n\nIN()\nCheck whether a value is within a set of values\n\nIS\nTest a value against a boolean\n\nIS NOT\nTest a value against a boolean\n\nIS NOT NULL\nNOT NULL value test\n\nIS NULL\nNULL value test\n\nISNULL()\nTest whether the argument is NULL\n\nLEAST()\nReturn the smallest argument\n\n<\nLess than operator\n\n<=\nLess than or equal operator\n\nLIKE\nSimple pattern matching\n\nNOT BETWEEN ... AND ...\nCheck whether a value is not within a range of values\n\n!=, <>\nNot equal operator\n\nNOT IN()\nCheck whether a value is not within a set of values\n\n\n\n\n\nLogical Operators\u00b6\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nAND, &&\nLogical AND\n\nNOT, !\nNegates value\n\n||, OR\nLogical OR\n\nXOR\nLogical XOR\n\n\n\n\n\nControl Flow Functions and Operators\u00b6\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nCASE\nCase operator\n\nIF()\nIf/else construct\n\nIFNULL()\nNull if/else construct\n\nNULLIF()\nReturn NULL if expr1 = expr2\n\n\n\n\n\nString Functions\u00b6\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nASCII()\nReturn numeric value of left-most character\n\nCHAR_LENGTH()\nReturn number of characters in argument\n\nCHARACTER_LENGTH()\nSynonym for CHAR_LENGTH()\n\nCONCAT()\nReturn concatenated string\n\nCONCAT_WS()\nReturn concatenate with separator\n\nELT()\nReturn string at index number\n\nINSERT()\nInsert a substring at the specified position up to the specified\nnumber of characters\n\nINSTR()\nReturn the index of the first occurrence of substring\n\nLCASE()\nSynonym for LOWER()\n\nLEFT()\nReturn the leftmost number of characters as specified\n\nLENGTH()\nReturn the length of a string in bytes\n\nLOCATE()\nReturn the position of the first occurrence of substring\n\nLOWER()\nReturn the argument in lowercase\n\nLTRIM()\nRemove leading spaces\n\nMID()\nReturn a substring starting from the specified position\n\nNOT LIKE\nNegation of simple pattern matching\n\nNOT REGEXP\nNegation of REGEXP\n\nREGEXP\nPattern matching using regular expressions\n\nREPLACE()\nReplace occurrences of a specified string\n\nRIGHT()\nReturn the specified rightmost number of characters\n\nRTRIM()\nRemove trailing spaces\n\nSPACE()\nReturn a string of the specified number of spaces\n\nSUBSTR()\nReturn the substring as specified\n\nSUBSTRING()\nReturn the substring as specified\n\nSUBSTRING_INDEX()\nReturn a substring from a string before the specified number of\noccurrences of the delimiter\n\nTRIM()\nRemove leading and trailing spaces\n\nUCASE()\nSynonym for UPPER()\n\nUPPER()\nConvert to uppercase\n\n\n\n\n\nNumeric Functions and Operators\u00b6\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nABS()\nReturn the absolute value\n\nACOS()\nReturn the arc cosine\n\nASIN()\nReturn the arc sine\n\nATAN()\nReturn the arc tangent\n\nATAN2(), ATAN()\nReturn the arc tangent of the two arguments\n\nCEIL()\nReturn the smallest integer value not less than the argument\n\nCEILING()\nReturn the smallest integer value not less than the argument\n\nCOS()\nReturn the cosine\n\nCOT()\nReturn the cotangent\n\nDEGREES()\nConvert radians to degrees\n\nDIV\nInteger division\n\n/\nDivision operator\n\nEXP()\nRaise to the power of\n\nFLOOR()\nReturn the largest integer value not greater than the argument\n\nLN()\nReturn the natural logarithm of the argument\n\nLOG()\nReturn the natural logarithm of the first argument\n\nLOG10()\nReturn the base-10 logarithm of the argument\n\nLOG2()\nReturn the base-2 logarithm of the argument\n\n-\nMinus operator\n\nMOD()\nReturn the remainder\n\n%, MOD\nModulo operator\n\nPI()\nReturn the value of pi\n\n+\nAddition operator\n\nPOW()\nReturn the argument raised to the specified power\n\nPOWER()\nReturn the argument raised to the specified power\n\nRADIANS()\nReturn argument converted to radians\n\nROUND()\nRound the argument\n\nSIGN()\nReturn the sign of the argument\n\nSIN()\nReturn the sine of the argument\n\nSQRT()\nReturn the square root of the argument\n\nTAN()\nReturn the tangent of the argument\n\n*\nMultiplication operator\n\nTRUNCATE()\nTruncate to specified number of decimal places\n\n-\nChange the sign of the argument\n\n\n\n\n\nDate and Time Functions\u00b6\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nADDDATE()\nAdd time values (intervals) to a date value\n\nCURDATE()\nReturn the current date\n\nCURRENT_DATE(), CURRENT_DATE\nSynonyms for CURDATE()\n\nCURRENT_TIMESTAMP(), CURRENT_TIMESTAMP\nSynonyms for NOW()\n\nDATE()\nExtract the date part of a date or datetime expression\n\nDATEDIFF()\nReturns the difference, in days, between two specified dates.\n\nDATE_ADD()\nAdd time values (intervals) to a date value\n\nDATE_FORMAT()\nFormat date as specified\n\nDATE_SUB()\nSubtract a time value (interval) from a date\n\nDAY()\nSynonym for DAYOFMONTH()\n\nDAYNAME()\nReturn the name of the weekday\n\nDAYOFMONTH()\nReturn the day of the month (0-31)\n\nDAYOFWEEK()\nReturn the weekday index of the argument\n\nDAYOFYEAR()\nReturn the day of the year (1-366)\n\nEXTRACT()\nExtract part of a date\n\nFROM_DAYS()\nConvert a day number to a date\n\nHOUR()\nExtract the hour\n\nLAST_DAY\nReturn the last day of the month for the argument\n\nMAKEDATE()\nCreate a date from the year and day of year\n\nMINUTE()\nReturn the minute from the argument\n\nMONTH()\nReturn the month from the date passed\n\nMONTHNAME()\nReturn the name of the month\n\nNOW()\nReturn the current date and time\n\nQUARTER()\nReturn the quarter from a date argument\n\nSECOND()\nReturn the second (0-59)\n\nSTR_TO_DATE()\nConvert a string to a date\n\nSUBDATE()\nSynonym for DATE_SUB() when invoked with three arguments\n\nTIME_TO_SEC()\nReturn the argument converted to seconds\n\nTIMEDIFF()\nSubtract time\n\nTIMESTAMP()\nWith a single argument, this function returns the date or datetime\n\nTIMESTAMPADD()\nAdd an interval to a datetime expression\n\nTIMESTAMPDIFF()\nSubtract an interval from a datetime expression\n\nTO_DAYS()\nReturn the date argument converted to days\n\nUTC_TIMESTAMP()\nReturn the current UTC date and time\n\nWEEK()\nReturn the week number\n\nWEEKDAY()\nReturn the weekday index\n\nWEEKOFYEAR()\nReturn the calendar week of the date (1-53)\n\nYEAR()\nReturn the year\n\nYEARWEEK()\nReturn the year and week\n\n\n\n\n\nCast Functions and Operators\u00b6\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nCAST()\nCast a value as a certain type\n\nCONVERT()\nConvert a value as a certain type\n\n\n\n\n\nSubquery Constructors\u00b6\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nROW()\nReturns one row of values rather than one column of values\n\n\n\n\n\nInformation Functions\u00b6\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nCONNECTION_ID()\nReturn the connection ID (thread ID) for the connection\n\nCURRENT_USER(), CURRENT_USER\nThe authenticated user name and host name\n\nDATABASE()\nReturn the default (current) database name\n\nSCHEMA()\nSynonym for DATABASE()\n\nSESSION_USER()\nSynonym for USER()\n\nSYSTEM_USER()\nSynonym for USER()\n\nUSER()\nThe user name and host name provided by the client\n\nVERSION()\nReturn a string that indicates the MySQL server version\n\n\n\n\n\nGROUP BY (Aggregate) Functions\u00b6\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nAVG()\nReturn the average value of the argument\n\nCOUNT()\nReturn a count of the number of rows returned\n\nCOUNT(DISTINCT)\nReturn the count of a number of different values\n\nMAX()\nReturn the maximum value\n\nMIN()\nReturn the minimum value\n\nSTD()\nReturn the population standard deviation\n\nSTDDEV()\nReturn the population standard deviation\n\nSTDDEV_POP()\nReturn the population standard deviation\n\nSTDDEV_SAMP()\nReturn the sample standard deviation\n\nSUM()\nReturn the sum\n\n\n\n\n\nUtility Statements\u00b6\n\n\n\n\n\n\nStatement\nDescription\n\n\n\nUSE <databaseName>\nChoose the database to use as the current database for subsequent statements\n\n\n\n\n\nDatabase Administration Statements\u00b6\n\n\n\n\n\n\nStatement\nDescription\n\n\n\nSHOW CREATE TABLE <tableName>\nShows the structure of the <tableName> table. The structure\nincludes comments that describe the mapping from the SQL table and\ncolumns to MongoDB collection and fields.\n\nSHOW [GLOBAL | SESSION] STATUS [LIKE 'pattern' | WHERE expr]\nShows mongosqld server metrics. The structure contains\nnon-empty values for at least the following fields:\n\nBytes_received\nBytes_sent\nConnections\nQueries\nThreads_connected\nThreads_created\nUptime\n\nBy default the SHOW STATUS statement will only show statistics\nfor the current connection, corresponding to the SESSION\nqualifier. If you specify the GLOBAL qualifier,\nSHOW STATUS will instead show aggregate statistics for the\nentire server.\n\n\n\n\n\n",
            "preview": "MongoDB Connector for BI Version 2.2 is compatible with SQL-99 SELECT statements.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/reference/mongosqld/",
                "https://mariadb.com/kb/en/sql-99/",
                "https://mariadb.com/kb/en/sql-99/select-statement/"
            ]
        },
        {
            "slug": "tutorial/install-auth-plugin-c/index.html",
            "title": "Install the C Authentication Plugin \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Install the C Authentication Plugin",
                "Supported Platforms",
                "Install mongosql_auth on Windows",
                "Install mongosql_auth on MacOS or Linux"
            ],
            "text": "\nInstall the C Authentication Plugin\u00b6\n\nOn this page\n\nSupported Platforms\nInstall mongosql_auth on Windows\nInstall mongosql_auth on MacOS or Linux\n\n\n\nNew in version 2.2.\n\nThe MongoDB Connector for BI provides a MySQL authentication plugin which implements the\nclient side of MongoDB-supported authentication mechanisms. The\nmongosql_auth plugin allows you to use MongoDB Connector for BI with a MongoDB\ninstance running with authentication enabled without needing to\ngenerate your own SSL certificates for authentication.\nThis plugin supports the following authentication mechanisms:\n\nSCRAM-SHA-1\nPLAIN\n\n\nSupported Platforms\u00b6\nThe plugin is built and tested on the following platforms (all x86_64):\n\nWindows 2008 R2\nOSX 10.12\nUbuntu 14.04\nRHEL 7.0\n\nThe plugin is built against MySQL 5.7.18 Community Edition (64-bit),\nand tested with MySQL 5.7.18 Community Edition and the MongoDB\nConnector for BI 2.2.\n\n\nInstall mongosql_auth on Windows\u00b6\n\nDownload the MySQL 5.7.18 installer and install the\nproducts needed.\nDownload the mongosql_auth plugin component .msi installer and install the\nmongosql_auth plugin component.\n\n\n\nInstall mongosql_auth on MacOS or Linux\u00b6\n\nDownload mongosql_auth plugin library from  the\nreleases page.\n\nAfter downloading, move the file mongosql_auth.so to either:\n\n<mysql-home>/lib/plugin/ directory.\nThe default location of <mysql-home> varies by platform.\nTo discover the location of the plugin directory, run the\nfollowing at the command line:\nmysql_config --plugindir\n\n\n\n\n- OR -\n\nA directory of your choice if you provide the\nplugin-dir=<your-install-dir> option to your MySQL client. See\nthe mysql client command example.\n\n\n\nFor more information on usage and examples, see\nC Authentication Plugin.\n\n",
            "preview": "The MongoDB Connector for BI provides a MySQL authentication plugin which implements the client side of MongoDB-supported authentication mechanisms. The mongosql_auth plugin allows you to use MongoDB Connector for BI with a MongoDB instance running with authentication enabled without needing to generate your own SSL certificates for authentication.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/reference/auth-plugin-c/",
                "https://github.com/mongodb/mongosql-auth-c/releases",
                "https://dev.mysql.com/downloads/file/?id=470091"
            ]
        },
        {
            "slug": "tutorial/install-auth-plugin-jdbc/index.html",
            "title": "Install the JDBC Authentication Plugin \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Install the JDBC Authentication Plugin",
                "Install JDBC Authentication Plugin"
            ],
            "text": "\nInstall the JDBC Authentication Plugin\u00b6\n\nOn this page\n\nInstall JDBC Authentication Plugin\n\n\n\nNew in version 2.2.\n\nThe MongoDB Connector for BI provides a client-side MySQL authentication plugin for Java that\nintegrates with MySQL\u2019s Connector/J JDBC driver\nand implements the client side of MongoDB-supported authentication\nmechanisms.\nThis plugin supports the following mechanisms:\n\nSCRAM-SHA-1\nPLAIN\n\n\nInstall JDBC Authentication Plugin\u00b6\n\nInclude the authentication plugin module library in the CLASSPATH. The\nMaven coordinates are:\n<dependency>\n    <groupId>org.mongodb</groupId>\n    <artifactId>mongosql-auth</artifactId>\n    <version>1.0.0</version>\n</dependency>\n\n\n\nSee also\nTo learn more about Maven, refer to its documentation site.\n\nYou can also download the .jar archive directly from the plugin\nreleases page.\n\nInclude MySQL Connector/J\nin the CLASSPATH. Its Maven coordinates are:\n<dependency>\n   <groupId>mysql</groupId>\n   <artifactId>mysql-connector-java</artifactId>\n   <version>5.1.42</version>\n</dependency>\n\n\n\nAdd the authentication plugin in the MySQL connection string:\njdbc:mysql://127.0.0.1:3307?useSSL=false&authenticationPlugins=org.mongodb.mongosql.auth.plugin.MongoSqlAuthenticationPlugin\n\n\n\nSee also\nTo learn about the authenticationPlugins query parameter, see the MySQL documentation.\n\nYou may also specify the authentication mechanism and authentication source\nas a query parameter on the username.\n\n\n\n\n\n\nParameter\nDefault Value\n\n\n\nAuthentication mechanism\nUsername and Password (SCRAM-SHA-1).\n\nAuthentication source\n\nadmin for Username and Password (SCRAM-SHA-1)\n$external for LDAP (PLAIN)\n\n\n\n\n\n\nExample\nSpecify an authentication mechanism:\n{username}?mechanism=PLAIN\n\n\nSpecify an authentication source using default authentication mechanism:\n{username}?source={somedb}\n\n\n\n\n\n\nNote\n\nThe SCRAM-SHA-1 mechanism hashes the passwords in the client plugin.\nAll other data is in cleartext. If possible, use with SSL connections.\nThe LDAP (PLAIN) mechanism sends the password in cleartext. If\npossible, use with SSL connections.\n\n\n\n",
            "preview": "The MongoDB Connector for BI provides a client-side MySQL authentication plugin for Java that integrates with MySQL\u2019s Connector/J JDBC driver and implements the client side of MongoDB-supported authentication mechanisms.",
            "links": [
                "https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-configuration-properties.html",
                "https://maven.apache.org/guides/index.html",
                "https://github.com/mongodb/mongosql-auth-java/releases/",
                "https://dev.mysql.com/downloads/connector/j/5.1.html",
                "https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-installing.html"
            ]
        },
        {
            "slug": "tutorial/using-the-bi/index.html",
            "title": "Using the MongoDB Connector for BI \u2014 MongoDB Connector for BI 2.2",
            "tags": "",
            "headings": [
                "Using the MongoDB Connector for BI"
            ],
            "text": "\nUsing the MongoDB Connector for BI\u00b6\nConnect from the MySQL Client describes the process of connecting to the\nMongoDB Connector for BI with the MySQL client.\nConnect from Tableau Desktop describes the process of connecting\nthe MongoDB Connector for BI to Tableau Desktop.\n\n\nConnect from the MySQL Client\nConnect from Tableau Desktop\n\n\n",
            "preview": "Connect from the MySQL Client describes the process of connecting to the MongoDB Connector for BI with the MySQL client.",
            "links": [
                "https://docs.mongodb.com/bi-connector/current/connect/mysql/",
                "https://docs.mongodb.com/bi-connector/current/connect/tableau/"
            ]
        }
    ],
    "url": "https://docs.mongodb.com/bi-connector/current"
}
